----STARTUP---- (13 May 2021 21:04:58) as C:\Applications\CuisUniversity\windows64\windows64\CuisUniversity-4532.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'GDH 5/13/2021 21:05:35'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'GDH 5/13/2021 21:05:43'!
Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'GDH 5/13/2021 21:06:48'!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/13/2021 21:14:24' prior: 50886624!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	
	self assert: marsRover position = initialPosition! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/13/2021 21:34:23' prior: 50886629!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: ''
	
	self assert: marsRover position = initialPosition! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/13/2021 21:35:08' prior: 50886640!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: ''.
	
	self assert: marsRover position = initialPosition.
	self assert: marsRover headsTo = #South! !

----QUIT----(13 May 2021 21:36:02) CuisUniversity-4532.image priorSource: 17758270!

----STARTUP---- (13 May 2021 21:36:08) as C:\Applications\CuisUniversity\windows64\windows64\CuisUniversity-4532.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'GDH 5/13/2021 21:36:45'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:36:47'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:36:47'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'GDH 5/13/2021 21:37:09'!
initAt: aPoint heading: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeInitAt: aPoint heading: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'GDH 5/13/2021 21:38:07' prior: 50886689!
initAt: aPosition heading: aCardinal 

	^self new positionAt: aPosition heading: aCardinal ! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:38:18'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'GDH 5/13/2021 21:38:25'!
positionAt: aPoint heading: aSymbol 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'GDH 5/13/2021 21:39:10'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'GDH 5/13/2021 21:39:11'!
Object subclass: #MarsRover
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'GDH 5/13/2021 21:39:06' prior: 50886707!
positionAt: aPosition heading: aCardinal

	position := aPosition.
	heading := aCardinal. 
	
	! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:39:27'!
ERROR!
!MarsRover methodsFor: 'processing commands' stamp: 'GDH 5/13/2021 21:39:50'!
processCommands: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'processing commands' stamp: 'GDH 5/13/2021 21:40:01' prior: 50886735!
processCommands: aString 
	! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:40:09'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'GDH 5/13/2021 21:40:20'!
position
	self shouldBeImplemented.
	^position! !
!MarsRover methodsFor: 'testing' stamp: 'GDH 5/13/2021 21:40:26' prior: 50886747!
position
	
	^position! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:40:33'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'GDH 5/13/2021 21:40:45'!
headsTo
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'testing' stamp: 'GDH 5/13/2021 21:40:57' prior: 50886759!
headsTo

	^heading! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'GDH 5/13/2021 21:41:09'!
PASSED!

----SNAPSHOT----(13 May 2021 21:41:12) CuisUniversity-4532.image priorSource: 17760428!

----QUIT----(13 May 2021 22:44:19) CuisUniversity-4532.image priorSource: 17763815!

----STARTUP---- (16 May 2021 15:22:28) as C:\Users\Tomas\Desktop\windows64-limpia1\CuisUniversity-4532.image!


----End fileIn of C:\Users\Tomas\Desktop\windows64-limpia1\MarsRover.st----!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:31:33'!
test02
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = 1@-1.
	self assert: marsRover headsTo = #South
	
	! !

!testRun: #MarsRoverTest #test02 stamp: 'MS 5/16/2021 15:32:41'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:34:38'!
test02MoveForwardSouthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = 1@-1.
	self assert: marsRover headsTo = #South
	
	! !

!methodRemoval: MarsRoverTest #test02 stamp: 'MS 5/16/2021 15:34:42'!
test02
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = 1@-1.
	self assert: marsRover headsTo = #South
	
	!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:34:43'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:34:43'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:35:09'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:35:09'!
ERROR!

----End fileIn of C:\Users\Tomas\Desktop\windows64-limpia1\Packages\TerseGuide.pck.st----!

Point!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:40:40' prior: 50859376!
processCommands: aCommandLine
	
	^(position x @ (position y - 1)).
	! !

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:40:42'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:41:11' prior: 50859415!
test02MoveForwardSouthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = 1@(-1).
	self assert: marsRover headsTo = #South
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:42:03' prior: 50862385!
test02MoveForwardSouthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@-1).
	self assert: marsRover headsTo = #South
	
	! !

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:42:15'!
ERROR!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:42:19'!
FAILURE!

marsRover position!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:43:27'!
FAILURE!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:43:27'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:44:04' prior: 50862376!
processCommands: aCommandLine
	
	position := (position x @ (position y - 1)).
	! !

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:44:18'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:44:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:45:01'!
test02MoveBackwardsSouthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = #South
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:45:04'!
test03MoveBackwardsSouthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = #South
	
	! !

!methodRemoval: MarsRoverTest #test02MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:45:08'!
test02MoveBackwardsSouthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = #South
	
	!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:45:15'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:45:15'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:46:24' prior: 50862427!
processCommands: aCommandLine
	
	(aCommandLine = 'f') ifTrue: [position := (position x @ (position y - 1))].
	(aCommandLine = 'b') ifTrue: [position := (position x @ (position y + 1))].
	
	
	! !

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:46:30'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:46:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:47:31'!
test04MoveForwardNorthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:47:35'!
FAILURE!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:47:35'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:50:33' prior: 50862482!
processCommands: aCommandLine
	
	
	(heading = #North) ifTrue: [position := (position x @ (position y + 1))].
	
	(heading = #South) ifTrue: [
	
	(aCommandLine = 'f') ifTrue: [position := (position x @ (position y - 1))].
	(aCommandLine = 'b') ifTrue: [position := (position x @ (position y + 1))].
	
	]
	
	
	! !
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:51:06' prior: 50862517!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		position := (position x @ (position y + 1))
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := (position x @ (position y - 1))].
		(aCommandLine = 'b') ifTrue: [position := (position x @ (position y + 1))].
	
	]
	
	
	! !

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:51:11'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 15:51:11'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:51:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:51:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:51:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:52:40'!
test05MoveBackwardNorthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@-1).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 15:52:51'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:54:06' prior: 50862530!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := (position x @ (position y + 1))].
		(aCommandLine = 'b') ifTrue: [position := (position x @ (position y - 1))].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := (position x @ (position y - 1))].
		(aCommandLine = 'b') ifTrue: [position := (position x @ (position y + 1))].
	
	]
	
	
	! !

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 15:54:09'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 15:54:09'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:54:09'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:54:09'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:54:09'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 15:54:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 15:55:02'!
test06MoveForwardEastIncreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = #East.
	
	! !

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 15:55:03'!
FAILURE!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 15:55:03'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:58:19' prior: 50862576!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := (position x @ (position y + 1))].
		(aCommandLine = 'b') ifTrue: [position := (position x @ (position y - 1))].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := (position x @ (position y - 1))].
		(aCommandLine = 'b') ifTrue: [position := (position x @ (position y + 1))].
	
	].

	position :=  (position x + 1) @ position y.
	
	
	! !
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 15:58:40' prior: 50862632!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	position :=  (position x + 1) @ position y.
	
	
	! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 15:59:13'!
FAILURE!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 15:59:13'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 15:59:13'!
FAILURE!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 15:59:13'!
FAILURE!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 15:59:13'!
FAILURE!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 15:59:13'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 15:59:25'!
FAILURE!

marsRover position!

initialPosition!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:00:57' prior: 50862650!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [position :=  (position x + 1) @ position y].

	
	
	
	! !

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:01:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:02:18'!
test07MoveBackwardEastDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = #East.
	
	! !

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:02:19'!
FAILURE!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:02:35'!
FAILURE!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:02:35'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:02:41' prior: 50862715!
test07MoveBackwardEastDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = #East.
	
	! !

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:02:42'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:04:15' prior: 50862693!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
	
	].

	
	
	
	! !

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:04:17'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:04:57'!
test08MoveForwardWestDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = #West.
	
	! !

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:04:58'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:05:37' prior: 50862753!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
	
	].

	
	(heading = #West) ifTrue: [
		
		position :=  (position x - 1) @ position y.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:05:39'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:05:40'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:05:40'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:05:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:06:08'!
test08MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = #West.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:06:10'!
test09MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = #West.
	
	! !

!methodRemoval: MarsRoverTest #test08MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:06:17'!
test08MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = #West.
	
	!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:06:18'!
FAILURE!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:06:18'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:07:05' prior: 50862818!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:07:08'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:07:10'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:23:41'!
test10ShouldHeadEastWhenHeadingNorthAndTurnRight
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	! !

!testRun: #MarsRoverTest #test10ShouldHeadEastWhenHeadingNorthAndTurnRight stamp: 'MS 5/16/2021 16:23:43'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:24:43'!
test10TurningRightWhenHeadingNorthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	! !

!methodRemoval: MarsRoverTest #test10ShouldHeadEastWhenHeadingNorthAndTurnRight stamp: 'MS 5/16/2021 16:24:48'!
test10ShouldHeadEastWhenHeadingNorthAndTurnRight
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:24:56'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:25:55' prior: 50862916!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:25:58'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:25:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:26:22'!
test10TurningLeftWhenHeadingNorthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #West.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:26:28'!
test11TurningLeftWhenHeadingNorthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #West.
	
	! !

!methodRemoval: MarsRoverTest #test10TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:26:30'!
test10TurningLeftWhenHeadingNorthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #West.
	
	!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:26:32'!
FAILURE!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:26:32'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:27:10' prior: 50863026!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:27:18'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:27:19'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:27:19'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:27:19'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:27:19'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:27:19'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:27:19'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:28:43'!
test12TurningRightWhenHeadingEastShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #South.
	
	! !

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:28:53'!
FAILURE!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:29:08'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:30:00' prior: 50863210!
test12TurningRightWhenHeadingEastShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #South.
	
	! !

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:30:10'!
FAILURE!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:30:10'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:30:53' prior: 50863138!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:31:04'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:31:05'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:31:05'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:31:05'!
FAILURE!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:31:05'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:31:05'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:31:05'!
FAILURE!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:31:23'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:31:51'!
test12TurningLeftWhenHeadingEastShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #North.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:31:56'!
test13TurningLeftWhenHeadingEastShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test12TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:00'!
test12TurningLeftWhenHeadingEastShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #East.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #North.
	
	!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:02'!
FAILURE!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:02'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:32:25' prior: 50863250!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:28'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:32:28'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:32:28'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:32:29'!
FAILURE!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:29'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:32:29'!
FAILURE!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:32:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:33:56'!
test14TurningRightWhenHeadingSouthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #West.
	
	! !

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:34:05'!
FAILURE!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:34:05'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:34:24' prior: 50863380!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:34:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:34:49'!
test14TurningLeftWhenHeadingSouthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:34:52'!
test15TurningLeftWhenHeadingSouthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	! !

!methodRemoval: MarsRoverTest #test14TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:34:57'!
test14TurningLeftWhenHeadingSouthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #South.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #East.
	
	!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:00'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:00'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:35:20' prior: 50863490!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
	
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:26'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:26'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:29'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:29'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:35:36'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:36:09'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:36:09'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:36:14'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:38:20' prior: 50863575!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:38:23'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:38:23'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:39:34'!
test16TurningRightWhenHeadingWestShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 16:39:35'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:39:52' prior: 50863643!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:39:54'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 16:39:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:40:18'!
test16TurningLeftWhenHeadingWestShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #South.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:40:44'!
test17TurningLeftWhenHeadingWestShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #South.
	
	! !

!methodRemoval: MarsRoverTest #test16TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:40:44'!
test16TurningLeftWhenHeadingWestShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: #West.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = #South.
	
	!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:40:52'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:40:52'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:41:13' prior: 50863753!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		(aCommandLine = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:41:15'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:41:17'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:41:18'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:43:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:49:12'!
test18ExecutesMoreThanOneInstruction
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ffbb'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = #North.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 16:50:49' prior: 50864009!
test18ExecutesMoreThanOneInstruction
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'fffbb'.
	
	self assert: marsRover position = (0@1).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneInstruction stamp: 'MS 5/16/2021 16:50:52'!
FAILURE!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneInstruction stamp: 'MS 5/16/2021 16:50:58'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 16:53:36' prior: 50863897!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		(aCommandLine = 'fffbb') ifTrue: [position := 0@1].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		(aCommandLine = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneInstruction stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 16:53:39'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneInstruction stamp: 'MS 5/16/2021 16:53:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:00:07'!
test18
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'fffbb'.
	
	self assert: marsRover position = (0@1).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test18ExecutesMoreThanOneInstruction stamp: 'MS 5/16/2021 17:01:45'!
test18ExecutesMoreThanOneInstruction
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'fffbb'.
	
	self assert: marsRover position = (0@1).
	self assert: marsRover headsTo = #North.
	
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:02:00' prior: 50864150!
test18
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'fb'.
	
	self assert: marsRover position = (0@1).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:02:03'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:02:21' prior: 50864174!
test18
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:02:34'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:02:34'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:02:59' prior: 50864041!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		(aCommandLine = 'ff') ifTrue: [position := 0@2].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		(aCommandLine = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:03:02'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:03:04'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:03:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:03:34'!
test19
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:03:35'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:03:58' prior: 50864204!
processCommands: aCommandLine
	
	(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		(aCommandLine = 'ff') ifTrue: [position := 0@2].
		(aCommandLine = 'bb') ifTrue: [position := 0@-2].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		(aCommandLine = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:04:01'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:04:52'!
PASSED!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:07:33'!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'r') ifTrue: [heading := #East].
		(aCommand = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'r') ifTrue: [heading := #West].
		(aCommand = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #South].
		(aCommand = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #North].
		(aCommand = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:09:37' prior: 50864328!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | self processCommand: aCommand ].
		
	
	"(heading = #North) ifTrue: [
		
		
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'r') ifTrue: [heading := #East].
		(aCommandLine = 'l') ifTrue: [heading := #West].
		(aCommandLine = 'ff') ifTrue: [position := 0@2].
		(aCommandLine = 'bb') ifTrue: [position := 0@-2].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommandLine = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommandLine = 'r') ifTrue: [heading := #West].
		(aCommandLine = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommandLine = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #South].
		(aCommandLine = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommandLine = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommandLine = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommandLine = 'r') ifTrue: [heading := #North].
		(aCommandLine = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	"
	
	
	! !

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:09:48'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:09:48'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:10:06'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:10:06'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:10:09'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:10:09'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:10:17'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:10:17'!
FAILURE!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:13:39' prior: 50864441!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'r') ifTrue: [heading := #East].
		(aCommand = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'r') ifTrue: [heading := #West].
		(aCommand = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #South].
		(aCommand = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #North].
		(aCommand = 'l') ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:14:07' prior: 50864555!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = 'f') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'r') ifTrue: [heading := #East].
		(aCommand = 'l') ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position := position x @ (position y - 1)].
		(aCommand = 'b') ifTrue: [position := position x @ (position y + 1)].
		(aCommand = 'r') ifTrue: [heading := #West].
		(aCommand = 'l') ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = 'f') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #South].
		(aCommand = 'l') ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = 'f') ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = 'b') ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = 'r') ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:14:15'!
PASSED!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:15:25' prior: 50864596!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:15:31'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:15:35'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:15:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:16:29'!
test18ExecutesMoreThanOneValidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:16:34'!
test19
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	!

!methodRemoval: MarsRoverTest #test18 stamp: 'MS 5/16/2021 17:16:35'!
test18
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 17:16:36'!
PASSED!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:16:50' prior: 50864482!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | self processCommand: aCommand ].
		! !
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:16:52' prior: 50864782!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | self processCommand: aCommand ]
		! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:19:33'!
test19StopsExecutingAfterInvalidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 17:19:34'!
FAILURE!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 17:20:24'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:39:57' prior: 50864789!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | 
		(aCommand = 'm') ifTrue: [^self].
		self processCommand: aCommand].
		! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:40:01' prior: 50864641!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:40:30'!
test19
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 17:40:30'!
test19StopsExecutingAfterInvalidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:40:36'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:40:36'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:41:36' prior: 50864814!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | 
		(aCommand = $m) ifTrue: [^self].
		self processCommand: aCommand].
		! !

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:41:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:42:05'!
test20
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ffxff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	! !

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:42:07'!
FAILURE!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:42:34' prior: 50864891!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | 
		(aCommand = $m) ifTrue: [^self].
		(aCommand = $x) ifTrue: [^self].
		self processCommand: aCommand].
		! !

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:42:38'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 17:42:38'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 17:42:38'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 17:42:38'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:42:39'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:42:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:43:30'!
test19StopsExecutingAfterInvalidInstruction
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ffxff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test19StopsExecutingAfterInvalidInstruction stamp: 'MS 5/16/2021 17:43:43'!
test19StopsExecutingAfterInvalidInstruction
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ffxff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:43:45'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:43:47'!
PASSED!
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:44:16' prior: 50864915!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | 
		(aCommand = $m) ifTrue: [^self].
		(aCommand = $x) ifTrue: [^self].
		"self processCommand: aCommand ifInvalid: [^self]"].
		! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:44:32'!
processCommand: aCommand ifInvalid: aClosure
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!methodRemoval: MarsRover #processCommand:ifInvalid: stamp: 'MS 5/16/2021 17:44:41'!
processCommand: aCommand ifInvalid: aClosure
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:45:16'!
processCommand: aCommand aClosure: aClosure 
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!methodRemoval: MarsRover #processCommand: stamp: 'MS 5/16/2021 17:45:16'!
processCommand: aCommand
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:45:30'!
processCommand: aCommand ifInvalid: aClosure 
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	! !

!methodRemoval: MarsRover #processCommand:aClosure: stamp: 'MS 5/16/2021 17:45:30'!
processCommand: aCommand aClosure: aClosure 
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		
		^self.
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	
	].
	
	
	
	!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:46:14' prior: 50865192!
processCommand: aCommand ifInvalid: aClosure 
	
	(heading = #North) ifTrue: [
		
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		aClosure value.
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		aClosure value.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		aClosure value.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		aClosure value.
	].
	
	
	
	! !
!MarsRover methodsFor: 'processing commands' stamp: 'MS 5/16/2021 17:46:29' prior: 50865022!
processCommands: aCommandLine

	
	aCommandLine do: [ :aCommand | 
		self processCommand: aCommand ifInvalid: [^self]].
		! !

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:46:38'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:46:38'!
FAILURE!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:51:53' prior: 50865274!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	(heading = #North) ifTrue: [
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		aClosure value.
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		aClosure value.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		aClosure value.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		aClosure value.
	].
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 17:52:31' prior: 50865328!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	(heading = #North) ifTrue: [
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		^self.
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	].
	
	
	
	! !

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:52:41'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 17:52:45'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:52:46'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:52:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 17:53:15'!
test19StopsExecutingAfterInvalidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	! !

!methodRemoval: MarsRoverTest #test19 stamp: 'MS 5/16/2021 17:53:17'!
test19
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = #North.
	
	!

!methodRemoval: MarsRoverTest #test20 stamp: 'MS 5/16/2021 17:53:18'!
test20
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: #North.
	marsRover processCommands: 'ffxff'.
	
	self assert: marsRover position = (0@2).
	self assert: marsRover headsTo = #North.
	
	!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 17:53:20'!
PASSED!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:07:09' prior: 50865373!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	(heading = #North) ifTrue: [
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		^self.
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	].
	
	
	
	! !

Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCardinalPoint category: 'MarsRover' stamp: 'MS 5/16/2021 18:11:02'!
Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRenamed: #MarsRoverCardinalPoint as: #MarsRoverCardinalDirection stamp: 'MS 5/16/2021 18:11:29'!
Smalltalk renameClassNamed: #MarsRoverCardinalPoint as: #MarsRoverCardinalDirection!

MarsRoverCardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'MS 5/16/2021 18:11:58'!
MarsRoverCardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCardinalDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'MS 5/16/2021 18:12:01'!
MarsRoverCardinalDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'MS 5/16/2021 18:12:03'!
MarsRoverCardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'MS 5/16/2021 18:12:07'!
MarsRoverCardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverCardinalDirection methodsFor: 'nil' stamp: 'MS 5/16/2021 18:14:02'!
m: aCommand mm: aMarsRover

	^self subclassResponsibility.! !
!East methodsFor: 'nil' stamp: 'MS 5/16/2021 18:14:40' overrides: 50865628!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingEast: aCommand.! !
!North methodsFor: 'nil' stamp: 'MS 5/16/2021 18:14:50' overrides: 50865628!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingNorth: aCommand.! !
!South methodsFor: 'nil' stamp: 'MS 5/16/2021 18:15:02' overrides: 50865628!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingSouth: aCommand.! !
!West methodsFor: 'nil' stamp: 'MS 5/16/2021 18:15:12' overrides: 50865628!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingWest: aCommand.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:16:08' prior: 50865522!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	"(heading = #North) ifTrue: [
		
		(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $r) ifTrue: [heading := #East].
		(aCommand = $l) ifTrue: [heading := #West].
		^self.
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	]."
	
	
	
	! !
!MarsRover class methodsFor: 'instance creation' stamp: 'MS 5/16/2021 18:16:35' prior: 50859394!
initAt: aPosition heading: aCardinalDirection 

	^self new positionAt: aPosition heading: aCardinalDirection! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:17:07' prior: 50865657!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	"(heading = #North) ifTrue: [
		
		
	].
	
	(heading = #South) ifTrue: [
	
		(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
		(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
		(aCommand = $r) ifTrue: [heading := #West].
		(aCommand = $l) ifTrue: [heading := #East].
		^self.
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	]."
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:18:07'!
processCommandWhenHeadingNorth: aCommand! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:01' prior: 50865746!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
	(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
	(aCommand = $r) ifTrue: [heading := East new].
	(aCommand = $l) ifTrue: [heading := West new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:33' prior: 50865751!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [position := position x @ (position y + 1)].
	(aCommand = $b) ifTrue: [position := position x @ (position y - 1)].
	(aCommand = $r) ifTrue: [heading := East new].
	(aCommand = $l) ifTrue: [heading := West new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:43'!
processCommandWhenHeadingEast: aCommand
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:44'!
processCommandWhenHeadingSouth: aCommand
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:46'!
processCommandWhenHeadingWest: aCommand
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:19:56' prior: 50865709!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	"(heading = #North) ifTrue: [
		
		
	].
	
	(heading = #South) ifTrue: [
	
		
		
	].

	(heading = #East) ifTrue: [
	
		(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #South].
		(aCommand = $l) ifTrue: [heading := #North].
		^self.
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	]."
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:20:05' prior: 50865781!
processCommandWhenHeadingSouth: aCommand

	(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
	(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
	(aCommand = $r) ifTrue: [heading := #West].
	(aCommand = $l) ifTrue: [heading := #East].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:20:13' prior: 50865821!
processCommandWhenHeadingSouth: aCommand

	(aCommand = $f) ifTrue: [position := position x @ (position y - 1)].
	(aCommand = $b) ifTrue: [position := position x @ (position y + 1)].
	(aCommand = $r) ifTrue: [heading := West new].
	(aCommand = $l) ifTrue: [heading := East new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:20:23' prior: 50865791!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	"(heading = #North) ifTrue: [
		
		
	].
	
	(heading = #South) ifTrue: [
	
		
		
	].

	(heading = #East) ifTrue: [
	
		
	
	].

	
	(heading = #West) ifTrue: [
		
		(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
		(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
		(aCommand = $r) ifTrue: [heading := #North].
		(aCommand = $l) ifTrue: [heading := #South].
		^self.
	]."
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:20:37' prior: 50865776!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [position :=  (position x + 1) @ position y].
	(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
	(aCommand = $r) ifTrue: [heading := South new].
	(aCommand = $l) ifTrue: [heading := North new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:20:45' prior: 50865847!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	"(heading = #North) ifTrue: [
		
		
	].
	
	(heading = #South) ifTrue: [
	
		
		
	].

	(heading = #East) ifTrue: [
	
		
	
	].

	
	(heading = #West) ifTrue: [
		
		
	]."
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:21:03' prior: 50865786!
processCommandWhenHeadingWest: aCommand

	(aCommand = $f) ifTrue: [position :=  (position x - 1) @ position y].
	(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
	(aCommand = $r) ifTrue: [heading := North new].
	(aCommand = $l) ifTrue: [heading := South new].
	^self.
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:21:12' prior: 50865883!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	heading m: aCommand mm: self.
	
	
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:22:38' prior: 50859346!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: ''.
	
	self assert: marsRover position = initialPosition.
	self assert: marsRover headsTo = South new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:22:45' prior: 50862398!
test02MoveForwardSouthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@-1).
	self assert: marsRover headsTo = South new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:22:51' prior: 50862451!
test03MoveBackwardsSouthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = South new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:00' prior: 50862498!
test04MoveForwardNorthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@1).
	self assert: marsRover headsTo = North new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:11' prior: 50862560!
test05MoveBackwardNorthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@-1).
	self assert: marsRover headsTo = North new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:19' prior: 50862613!
test06MoveForwardEastIncreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = East new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:27' prior: 50862737!
test07MoveBackwardEastDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = East new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:36' prior: 50862802!
test08MoveForwardWestDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (0@0).
	self assert: marsRover headsTo = West new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:41' prior: 50862885!
test09MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = #West.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:44' prior: 50866025!
test09MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: marsRover headsTo = West new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:23:51' prior: 50862997!
test10TurningRightWhenHeadingNorthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = East new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:04' prior: 50863105!
test11TurningLeftWhenHeadingNorthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = West new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:12' prior: 50863230!
test12TurningRightWhenHeadingEastShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = South new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:19' prior: 50863347!
test13TurningLeftWhenHeadingEastShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = North new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:28' prior: 50863470!
test14TurningRightWhenHeadingSouthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = West new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:35' prior: 50863542!
test15TurningLeftWhenHeadingSouthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = East new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:44' prior: 50863737!
test16TurningRightWhenHeadingWestShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = North new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:51' prior: 50863864!
test17TurningLeftWhenHeadingWestShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: marsRover headsTo = South new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:24:59' prior: 50864746!
test18ExecutesMoreThanOneValidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'bb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = North new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:25:08' prior: 50865485!
test19StopsExecutingAfterInvalidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: marsRover headsTo = North new.
	
	! !

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:25:10'!
FAILURE!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:25:21'!
FAILURE!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:25:21'!
FAILURE!

marsRover position!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:26:48'!
FAILURE!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:26:48'!
FAILURE!

marsRover headsTo!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:29:15' prior: 50866168!
test19StopsExecutingAfterInvalidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'bbmb'.
	
	self assert: marsRover position = (0@-2).
	self assert: (marsRover headsTo isKindOf: North).
	
	! !

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:29:21'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:29:33' prior: 50866155!
test18ExecutesMoreThanOneValidCommand
	
	| marsRover initialPosition |
	
	initialPosition := 0@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'bb'.
	
	self assert: marsRover position = (0@-2).
	self assert: (marsRover headsTo isKindOf: North).
	
	! !

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:29:34'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:29:35'!
FAILURE!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:29:35'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:29:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:29:45' prior: 50866142!
test17TurningLeftWhenHeadingWestShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: South).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:29:50' prior: 50866129!
test16TurningRightWhenHeadingWestShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: North).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:29:58' prior: 50866116!
test15TurningLeftWhenHeadingSouthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: East).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:05' prior: 50866103!
test14TurningRightWhenHeadingSouthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: West).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:12' prior: 50866090!
test13TurningLeftWhenHeadingEastShouldHeadNorth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: North).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:19' prior: 50866077!
test12TurningRightWhenHeadingEastShouldHeadSouth
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: South).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:26' prior: 50866064!
test11TurningLeftWhenHeadingNorthShouldHeadWest
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'l'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: West).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:33' prior: 50866051!
test10TurningRightWhenHeadingNorthShouldHeadEast
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'r'.
	
	self assert: marsRover position = (1@0).
	self assert: (marsRover headsTo isKindOf: East).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:40' prior: 50866038!
test09MoveBackwardWestIncrementsXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (2@0).
	self assert: (marsRover headsTo isKindOf: West).
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:49' prior: 50866012!
test08MoveForwardWestDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: West new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (0@0).
	self assert: (marsRover headsTo isKindOf: West).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:30:58' prior: 50865999!
test07MoveBackwardEastDecreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (0@0).
	self assert: (marsRover headsTo isKindOf: East).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:05' prior: 50865986!
test06MoveForwardEastIncreasesXAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: East new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (2@0).
	self assert: (marsRover headsTo isKindOf: East).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:10' prior: 50865973!
test05MoveBackwardNorthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@-1).
	self assert: (marsRover headsTo isKindOf: North).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:18' prior: 50865960!
test04MoveForwardNorthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: North new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@1).
	self assert: (marsRover headsTo isKindOf: North).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:28' prior: 50865947!
test03MoveBackwardsSouthIncreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'b'.
	
	self assert: marsRover position = (1@1).
	self assert: (marsRover headsTo isKindOf: South).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:37' prior: 50865934!
test02MoveForwardSouthDecreasesYAxis
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: 'f'.
	
	self assert: marsRover position = (1@-1).
	self assert: (marsRover headsTo isKindOf: South).	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:31:45' prior: 50865921!
test01MarsRoverCoordsAreInitialWhenDidNotMove
	
	| marsRover initialPosition |
	
	initialPosition := 1@0.
	marsRover := MarsRover initAt: initialPosition heading: South new.
	marsRover processCommands: ''.
	
	self assert: marsRover position = initialPosition.
	self assert: (marsRover headsTo isKindOf: South).! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:31:47'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:31:48'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:31:48'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:31:48'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:31:48'!
PASSED!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:33:10' prior: 50865911!
processCommand: aCommand ifInvalid: aClosure 
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	self assertIsValid: aCommand ifInvalid: aClosure.
	
	heading m: aCommand mm: self.
	
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:33:40'!
assertIsValid: aCommand ifInvalid: aClosure.
	
	( (aCommand = $f) | (aCommand = $b) | (aCommand = $r) | (aCommand = $l) ) ifFalse: [aClosure value].
	
	
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:33:48' prior: 50866584!
processCommand: aCommand ifInvalid: aClosure 
	
	self assertIsValid: aCommand ifInvalid: aClosure.
	
	heading m: aCommand mm: self.
	
	
	
	! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:33:51'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:33:51'!
PASSED!
!East methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:38:56' prior: 50865633 overrides: 50865628!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingEast: aCommand.! !
!West methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43'!
process: aCommand for: aMarsRover

	aMarsRover processCommandWhenHeadingWest: aCommand.! !
!North methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43'!
process: aCommand for: aMarsRover

	aMarsRover processCommandWhenHeadingNorth: aCommand.! !
!South methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43'!
process: aCommand for: aMarsRover

	aMarsRover processCommandWhenHeadingSouth: aCommand.! !
!MarsRoverCardinalDirection methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43'!
process: aCommand for: aMarsRover

	^self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43' overrides: 50866700!
process: aCommand for: aMarsRover

	aMarsRover processCommandWhenHeadingEast: aCommand.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 5/16/2021 18:39:43' prior: 50866604!
processCommand: aCommand ifInvalid: aClosure 
	
	self assertIsValid: aCommand ifInvalid: aClosure.
	
	heading process: aCommand for: self.
	
	
	
	! !

!methodRemoval: West #m:mm: stamp: 'MS 5/16/2021 18:39:43'!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingWest: aCommand.!

!methodRemoval: North #m:mm: stamp: 'MS 5/16/2021 18:39:43'!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingNorth: aCommand.!

!methodRemoval: South #m:mm: stamp: 'MS 5/16/2021 18:39:43'!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingSouth: aCommand.!

!methodRemoval: MarsRoverCardinalDirection #m:mm: stamp: 'MS 5/16/2021 18:39:43'!
m: aCommand mm: aMarsRover

	^self subclassResponsibility.!

!methodRemoval: East #m:mm: stamp: 'MS 5/16/2021 18:39:43'!
m: aCommand mm: aMarsRover

	aMarsRover processCommandWhenHeadingEast: aCommand.!

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:40:10'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:40:11'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:40:11'!
PASSED!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:03'!
rotateLeft! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:18'!
rotateEast! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:21'!
rotateWest! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:22'!
rotateNorth! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:24'!
rotateSouth! !

!methodRemoval: MarsRover #rotateLeft stamp: 'MS 5/16/2021 18:45:25'!
rotateLeft!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:29'!
moveEast! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:32'!
moveWest! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:33'!
moveNorth! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:34'!
moveSouth! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:45:45' prior: 50866810!
rotateEast! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:00'!
rotateToEast! !

!methodRemoval: MarsRover #rotateEast stamp: 'MS 5/16/2021 18:46:00'!
rotateEast!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:06'!
rotateToNorth! !

!methodRemoval: MarsRover #rotateNorth stamp: 'MS 5/16/2021 18:46:06'!
rotateNorth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:12'!
rotateToSouth! !

!methodRemoval: MarsRover #rotateSouth stamp: 'MS 5/16/2021 18:46:12'!
rotateSouth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:17'!
rotateToWest! !

!methodRemoval: MarsRover #rotateWest stamp: 'MS 5/16/2021 18:46:17'!
rotateWest!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:47'!
rotateEast! !

!methodRemoval: MarsRover #rotateToEast stamp: 'MS 5/16/2021 18:46:47'!
rotateToEast!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:51'!
rotateNorth! !

!methodRemoval: MarsRover #rotateToNorth stamp: 'MS 5/16/2021 18:46:51'!
rotateToNorth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:46:55'!
rotateTSouth! !

!methodRemoval: MarsRover #rotateToSouth stamp: 'MS 5/16/2021 18:46:55'!
rotateToSouth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:00'!
rotateToSouth! !

!methodRemoval: MarsRover #rotateTSouth stamp: 'MS 5/16/2021 18:47:01'!
rotateTSouth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:06'!
rotateToNorth! !

!methodRemoval: MarsRover #rotateNorth stamp: 'MS 5/16/2021 18:47:06'!
rotateNorth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:26'!
rotateToEast! !

!methodRemoval: MarsRover #rotateEast stamp: 'MS 5/16/2021 18:47:26'!
rotateEast!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:34'!
rotateEast! !

!methodRemoval: MarsRover #rotateToEast stamp: 'MS 5/16/2021 18:47:34'!
rotateToEast!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:39'!
rotateNorth! !

!methodRemoval: MarsRover #rotateToNorth stamp: 'MS 5/16/2021 18:47:39'!
rotateToNorth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:43'!
rotateSouth! !

!methodRemoval: MarsRover #rotateToSouth stamp: 'MS 5/16/2021 18:47:43'!
rotateToSouth!
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:47:46'!
rotateWest! !

!methodRemoval: MarsRover #rotateToWest stamp: 'MS 5/16/2021 18:47:46'!
rotateToWest!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:48:15' prior: 50865870!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [self moveEast].
	(aCommand = $b) ifTrue: [position :=  (position x - 1) @ position y].
	(aCommand = $r) ifTrue: [heading := South new].
	(aCommand = $l) ifTrue: [heading := North new].
	^self.! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:48:22' prior: 50866825!
moveEast

	position :=  (position x + 1) @ position y.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:48:33' prior: 50866926!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [self moveEast].
	(aCommand = $b) ifTrue: [self moveWest].
	(aCommand = $r) ifTrue: [heading := South new].
	(aCommand = $l) ifTrue: [heading := North new].
	^self.! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:48:38' prior: 50866828!
moveWest

	position :=  (position x - 1) @ position y.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:48:50' prior: 50866944!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [self moveEast].
	(aCommand = $b) ifTrue: [self moveWest].
	(aCommand = $r) ifTrue: [self rotateSouth].
	(aCommand = $l) ifTrue: [heading := North new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:48:57' prior: 50866961!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [self moveEast].
	(aCommand = $b) ifTrue: [self moveWest].
	(aCommand = $r) ifTrue: [self rotateSouth].
	(aCommand = $l) ifTrue: [self rotateNorth].
	^self.! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:08' prior: 50866901!
rotateEast

	heading := East new! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:16' prior: 50866907!
rotateNorth
	heading := North new! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:17' prior: 50866986!
rotateNorth

	heading := North new! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:22' prior: 50866913!
rotateSouth

	heading := South new! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:29' prior: 50866919!
rotateWest

	heading := West new! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:49:52' prior: 50866831!
moveNorth

	position :=  position x @ (position y + 1).! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:50:01' prior: 50866834!
moveSouth

	position :=  (position x - 1) @ position y.! !
!MarsRover methodsFor: 'moving - private' stamp: 'MS 5/16/2021 18:50:17' prior: 50867007!
moveSouth

	position :=  position x @ ( position y - 1 ).! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:50:52' prior: 50865764!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [self moveNorth].
	(aCommand = $b) ifTrue: [self moveSouth ].
	(aCommand = $r) ifTrue: [heading := East new].
	(aCommand = $l) ifTrue: [heading := West new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:50:53' prior: 50867018!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [self moveNorth].
	(aCommand = $b) ifTrue: [self moveSouth].
	(aCommand = $r) ifTrue: [heading := East new].
	(aCommand = $l) ifTrue: [heading := West new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:51:03' prior: 50867029!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [self moveNorth].
	(aCommand = $b) ifTrue: [self moveSouth].
	(aCommand = $r) ifTrue: [self rotateEast].
	(aCommand = $l) ifTrue: [heading := West new].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:51:09' prior: 50867040!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [self moveNorth].
	(aCommand = $b) ifTrue: [self moveSouth].
	(aCommand = $r) ifTrue: [self rotateEast].
	(aCommand = $l) ifTrue: [self rotateWest].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:51:44' prior: 50865834!
processCommandWhenHeadingSouth: aCommand

	(aCommand = $f) ifTrue: [self moveSouth ].
	(aCommand = $b) ifTrue: [self moveNorth ].
	(aCommand = $r) ifTrue: [self rotateWest ].
	(aCommand = $l) ifTrue: [self rotateEast ].
	^self.! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:52:04' prior: 50865898!
processCommandWhenHeadingWest: aCommand

	(aCommand = $f) ifTrue: [self moveWest ].
	(aCommand = $b) ifTrue: [position :=  (position x + 1) @ position y].
	(aCommand = $r) ifTrue: [heading := North new].
	(aCommand = $l) ifTrue: [heading := South new].
	^self.
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:52:22' prior: 50867073!
processCommandWhenHeadingWest: aCommand

	(aCommand = $f) ifTrue: [self moveWest ].
	(aCommand = $b) ifTrue: [self moveEast ].
	(aCommand = $r) ifTrue: [heading := North new].
	(aCommand = $l) ifTrue: [heading := South new].
	^self.
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:52:32' prior: 50867085!
processCommandWhenHeadingWest: aCommand

	(aCommand = $f) ifTrue: [self moveWest ].
	(aCommand = $b) ifTrue: [self moveEast ].
	(aCommand = $r) ifTrue: [self rotateNorth ].
	(aCommand = $l) ifTrue: [self rotateSouth ].
	^self.
! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:52:37'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:52:38'!
PASSED!
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:53:29' prior: 50867096!
processCommandWhenHeadingWest: aCommand

	(aCommand = $f) ifTrue: [self moveWest ].
	(aCommand = $b) ifTrue: [self moveEast ].
	(aCommand = $r) ifTrue: [self rotateNorth ].
	(aCommand = $l) ifTrue: [self rotateSouth ].
	
! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:53:34' prior: 50867062!
processCommandWhenHeadingSouth: aCommand

	(aCommand = $f) ifTrue: [self moveSouth ].
	(aCommand = $b) ifTrue: [self moveNorth ].
	(aCommand = $r) ifTrue: [self rotateWest ].
	(aCommand = $l) ifTrue: [self rotateEast ].
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:53:38' prior: 50867051!
processCommandWhenHeadingNorth: aCommand

	(aCommand = $f) ifTrue: [self moveNorth].
	(aCommand = $b) ifTrue: [self moveSouth].
	(aCommand = $r) ifTrue: [self rotateEast].
	(aCommand = $l) ifTrue: [self rotateWest].
	! !
!MarsRover methodsFor: 'processing commands - private' stamp: 'MS 5/16/2021 18:53:41' prior: 50866972!
processCommandWhenHeadingEast: aCommand

	(aCommand = $f) ifTrue: [self moveEast].
	(aCommand = $b) ifTrue: [self moveWest].
	(aCommand = $r) ifTrue: [self rotateSouth].
	(aCommand = $l) ifTrue: [self rotateNorth].
	! !

!testRun: #MarsRoverTest #test01MarsRoverCoordsAreInitialWhenDidNotMove stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test02MoveForwardSouthDecreasesYAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test03MoveBackwardsSouthIncreasesYAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test04MoveForwardNorthIncreasesYAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test05MoveBackwardNorthDecreasesYAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test06MoveForwardEastIncreasesXAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test07MoveBackwardEastDecreasesXAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test08MoveForwardWestDecreasesXAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test09MoveBackwardWestIncrementsXAxis stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightWhenHeadingNorthShouldHeadEast stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test11TurningLeftWhenHeadingNorthShouldHeadWest stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightWhenHeadingEastShouldHeadSouth stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test13TurningLeftWhenHeadingEastShouldHeadNorth stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenHeadingSouthShouldHeadWest stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test15TurningLeftWhenHeadingSouthShouldHeadEast stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenHeadingWestShouldHeadNorth stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test17TurningLeftWhenHeadingWestShouldHeadSouth stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutesMoreThanOneValidCommand stamp: 'MS 5/16/2021 18:55:06'!
PASSED!

!testRun: #MarsRoverTest #test19StopsExecutingAfterInvalidCommand stamp: 'MS 5/16/2021 18:55:07'!
PASSED!

----QUIT----(16 May 2021 18:57:24) CuisUniversity-4532.image priorSource: 16885703!