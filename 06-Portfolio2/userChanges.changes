
----STARTUP---- (30 May 2021 11:04:55) as C:\Applications\CuisUniversity\windows64\windows64\CuisUniversity-4532.image!


!classRemoval: #Withdraw stamp: 'GDH 5/30/2021 11:13:21'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #SenderTransfer stamp: 'GDH 5/30/2021 11:13:22'!
Transfer subclass: #SenderTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceiverTransfer stamp: 'GDH 5/30/2021 11:13:22'!
Transfer subclass: #ReceiverTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Transfer stamp: 'GDH 5/30/2021 11:13:22'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'sender receiver value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'GDH 5/30/2021 11:13:22'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'GDH 5/30/2021 11:13:22'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'GDH 5/30/2021 11:13:23'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'GDH 5/30/2021 11:13:23'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'GDH 5/30/2021 11:13:23'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'GDH 5/30/2021 11:13:23'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'GDH 5/30/2021 11:13:23'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\Gabriel\Documents\Facu\Inge1\18-Portfolio 2\Portfolio-Solucion.st----!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 16:17:43'!
test08TransferFromAccountAAddsToAccountB
! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:24:04'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 16:23:45' prior: 50898143!
test08TransferFromAccountAAddsToAccountB
	
	| senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new. 
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: senderAccount balance = -50.
	self assert: receiverAccount balance = 50.! !
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:26:18'!
register: aValue from: senderAccount to: receiverAccount
	
	Withdraw register: aValue on: senderAccount.
	Deposit register: aValue on: receiverAccount.
	! !

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 16:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 16:26:30'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 16:47:47'!
test09TransferKnowsBothLegs! !

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:50:38'!
Transfer class
	instanceVariableNames: 'leftLeg'!

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:50:39'!
Transfer class
	instanceVariableNames: 'leftLeg rightLeg'!

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:50:40'!
Transfer class
	instanceVariableNames: 'rightLeg leftLeg value'!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:50:34'!
initializeWith: aValue from: senderAccount to: receiverAccount
	
	leftLeg := Withdraw for: aValue.
	rightLeg := Deposit for: aValue.
	value := aValue.
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:51:46' prior: 50898228!
initializeWith: aValue from: senderAccount to: receiverAccount

	self new initializeWith: aValue from: senderAccount to: receiverAccount.
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:51:57' prior: 50898236!
initializeWith: aValue from: senderAccount to: receiverAccount

	^self new initializeWith: aValue from: senderAccount to: receiverAccount.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:52:23'!
Object subclass: #Transfer
	instanceVariableNames: 'leftLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:52:24'!
Object subclass: #Transfer
	instanceVariableNames: 'leftLeg rightLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:52:24'!
Object subclass: #Transfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'GDH 5/30/2021 16:52:22'!
initializeWith: aValue from: senderAccount to: receiverAccount
	
	leftLeg := Withdraw for: aValue.
	rightLeg := Deposit for: aValue.
	value := aValue.! !

Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 16:52:30'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:54:17' prior: 50898168!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	instance := self initializeWith: aValue from: senderAccount to: receiverAccount.
	
	instance leftLeg register: aValue on: senderAccount.
	instance rightLeg register: aValue on: receiverAccount.
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 16:54:44' prior: 50898288!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self initializeWith: aValue from: senderAccount to: receiverAccount.
	
	instance leftLeg register: aValue on: senderAccount.
	instance rightLeg register: aValue on: receiverAccount.
	! !
!Transfer methodsFor: 'accessing' stamp: 'GDH 5/30/2021 16:55:24'!
leftLeg
	
	^leftLeg! !
!Transfer methodsFor: 'accessing' stamp: 'GDH 5/30/2021 16:55:32'!
rightLeg
	
	^rightLeg! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 16:59:46' prior: 50898209!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer initializeWith: 50 from: senderAccount to: receiverAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'GDH 5/30/2021 17:00:30'!
initializeWith: aValue
	
	leftLeg := Withdraw for: aValue.
	rightLeg := Deposit for: aValue.
	value := aValue.! !

!methodRemoval: Transfer #initializeWith:from:to: stamp: 'GDH 5/30/2021 17:00:34'!
initializeWith: aValue from: senderAccount to: receiverAccount
	
	leftLeg := Withdraw for: aValue.
	rightLeg := Deposit for: aValue.
	value := aValue.!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 17:00:47'!
initializeWith: aValue

	^self new initializeWith: aValue.! !

!methodRemoval: Transfer class #initializeWith:from:to: stamp: 'GDH 5/30/2021 17:00:50'!
initializeWith: aValue from: senderAccount to: receiverAccount

	^self new initializeWith: aValue from: senderAccount to: receiverAccount.!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 17:00:58' prior: 50898300!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self initializeWith: aValue.
	
	instance leftLeg register: aValue on: senderAccount.
	instance rightLeg register: aValue on: receiverAccount.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 17:18:47' prior: 50898318!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer initializeWith: 50.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 17:23:59' prior: 50898366!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( senderAccount hasRegistered: transfer leftLeg ).
	self deny: ( senderAccount hasRegistered: transfer rightLeg ).
	
	self assert: ( receiverAccount hasRegistered: transfer rightLeg ).
	self deny: ( receiverAccount hasRegistered: transfer leftLeg ).! !

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 17:24:01'!
ERROR!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 17:24:17'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 17:25:59' prior: 50898355!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self initializeWith: aValue.
	
	senderAccount register: instance leftLeg.
	receiverAccount register: instance rightLeg.
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 17:26:13' prior: 50898402!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self initializeWith: aValue.
	
	senderAccount register: instance leftLeg.
	receiverAccount register: instance rightLeg.
	
	^instance 
	! !

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 17:26:47'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 17:58:55'!
test10TransferLeftLegCanReachTransferRightLeg
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer rightLeg = transfer leftLeg oppositeLeg ).
	self assert: ( transfer leftLeg = transfer rightLeg oppositeLeg ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 17:59:19'!
test10TransferLegsCanReachOppositeLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer rightLeg = transfer leftLeg oppositeLeg ).
	self assert: ( transfer leftLeg = transfer rightLeg oppositeLeg ).! !

!methodRemoval: ReceptiveAccountTest #test10TransferLeftLegCanReachTransferRightLeg stamp: 'GDH 5/30/2021 17:59:19'!
test10TransferLeftLegCanReachTransferRightLeg
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer rightLeg = transfer leftLeg oppositeLeg ).
	self assert: ( transfer leftLeg = transfer rightLeg oppositeLeg ).!

!classDefinition: #TransferLeftLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:03:35'!
AccountTransaction subclass: #TransferLeftLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferRightLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:03:40'!
AccountTransaction subclass: #TransferRightLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'GDH 5/30/2021 18:02:54' prior: 50898328!
initializeWith: aValue
	
	leftLeg := TransferLeftLeg for: self.
	rightLeg := TransferRightLeg for: self.
	
	value := aValue.! !

Object subclass: #TransferLeftLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLeftLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:04:28'!
Object subclass: #TransferLeftLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferRightLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferRightLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:04:32'!
Object subclass: #TransferRightLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLeftLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:05:43'!
Object subclass: #TransferLeftLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferLeftLeg methodsFor: 'no messages' stamp: 'GDH 5/30/2021 18:05:42'!
affectBalance: aBalance

	^aBalance - transfer value. ! !

!classDefinition: #TransferRightLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:05:54'!
Object subclass: #TransferRightLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferRightLeg methodsFor: 'no messages' stamp: 'GDH 5/30/2021 18:05:53'!
affectBalance: aBalance

	^aBalance + transfer value. ! !
!TransferLeftLeg class methodsFor: 'no messages' stamp: 'GDH 5/30/2021 18:06:37'!
for: aTransfer
	
	^ self new initializeFor: aTransfer.! !
!TransferLeftLeg methodsFor: 'initialization' stamp: 'GDH 5/30/2021 18:07:08'!
initializeFor: aTransfer
	
	transfer := aTransfer .! !
!TransferRightLeg methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:07:14'!
initializeFor: aTransfer
	
	transfer := aTransfer .! !
!TransferRightLeg class methodsFor: 'no messages' stamp: 'GDH 5/30/2021 18:07:24'!
for: aTransfer
	
	^ self new initializeFor: aTransfer.! !

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:08:15'!
ERROR!
!TransferLeftLeg methodsFor: 'initialization' stamp: 'GDH 5/30/2021 18:09:01'!
oppositeLeg
	
	^transfer rightLeg.! !
!TransferRightLeg methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:09:21'!
oppositeLeg
	
	^transfer leftLeg.! !

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 18:09:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:09:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 18:09:34'!
ERROR!
!Transfer methodsFor: 'accessing' stamp: 'GDH 5/30/2021 18:12:53' overrides: 16881508!
value
	
	^value! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:14:49'!
PASSED!

AccountTransaction subclass: #TransferLeftLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLeftLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:16:32'!
AccountTransaction subclass: #TransferLeftLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferRightLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferRightLeg category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:16:37'!
AccountTransaction subclass: #TransferRightLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferRightLeg methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:16:45' overrides: 50898039!
value
	
	^transfer value.! !
!TransferLeftLeg methodsFor: 'nil' stamp: 'GDH 5/30/2021 18:17:08' overrides: 50898039!
value
	
	^transfer value.! !

!methodRemoval: Transfer class #initializeWith: stamp: 'GDH 5/30/2021 18:23:21'!
initializeWith: aValue

	^self new initializeWith: aValue.!
!Transfer class methodsFor: 'instance creation' stamp: 'GDH 5/30/2021 18:23:27' prior: 50898412!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self new initializeWith: aValue.
	
	senderAccount register: instance leftLeg.
	receiverAccount register: instance rightLeg.
	
	^instance 
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:23:31'!
PASSED!

Object subclass: #AccountTransfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransfer category: 'Portfolio-Solucion' stamp: 'GDH 5/30/2021 18:24:24'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransfer stamp: 'GDH 5/30/2021 18:24:28'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #Transfer as: #AccountTransfer stamp: 'GDH 5/30/2021 18:24:36'!
Smalltalk renameClassNamed: #Transfer as: #AccountTransfer!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:24:36' prior: 50898473!
test10TransferLegsCanReachOppositeLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer rightLeg = transfer leftLeg oppositeLeg ).
	self assert: ( transfer leftLeg = transfer rightLeg oppositeLeg ).! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:24:36' prior: 50898376!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( senderAccount hasRegistered: transfer leftLeg ).
	self deny: ( senderAccount hasRegistered: transfer rightLeg ).
	
	self assert: ( receiverAccount hasRegistered: transfer rightLeg ).
	self deny: ( receiverAccount hasRegistered: transfer leftLeg ).! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 5/30/2021 18:24:36' prior: 50898155!
test08TransferFromAccountAAddsToAccountB
	
	| senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new. 
	receiverAccount := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: senderAccount balance = -50.
	self assert: receiverAccount balance = 50.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 18:24:46'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:12:45'!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:15:20' prior: 50898892!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	self assert: expectedSummary = ReceptiveAccount new accountSummary.! !

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:15:24'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:15:30'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:15:57'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:19:22' prior: 50898915!
accountSummary

	^OrderedCollection new with: self balanceSummary ! !

'Balance = '!

self class!

String!

1!

self class!

 SmallInteger !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:30:51'!
balanceSummary
	
	^'Balance = ' + self balance asString.! !

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:31:09'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:31:09'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:31:11'!
ERROR!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:31:55' prior: 50898927!
balanceSummary
	
	^'Balance = ' , self balance asString.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:31:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:31:58'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:32:23' prior: 50898920!
accountSummary

	^OrderedCollection with: self balanceSummary ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:32:32'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:33:18'!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:36:04' prior: 50899041!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	self assert: expectedSummary = account accountSummary.! !

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:36:16'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:43:22' prior: 50898995!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit ) ifTrue: [ summary add: ( self depositSummaryOf: aTransaction ) ]
		]

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:43:29' prior: 50899065!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit ) ifTrue: [ summary add: ( self depositSummaryOf: aTransaction ) ]
		].

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:44:33'!
depositSummaryOf: aDeposit
	
	^'Depósito por ' , aDeposit value asString , '.'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:44:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:44:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:45:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:45:05'!
FAILURE!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:45:05'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:45:09' prior: 50899047!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	self assert: expectedSummary = account accountSummary.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:45:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:46:59'!
test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account .
	
	self assert: expectedSummary = account accountSummary.! !

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 19:47:10'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:47:57' prior: 50899077!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )						  ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )]
		].

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:49:10'!
withdrawSummaryOf: aWithdraw
	
	^'Extracción por ' , aWithdraw value asString , '.'.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 5/30/2021 19:49:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 19:49:21'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:51:08'!
test14AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.! !

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:51:10'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:52:12' prior: 50899274!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )						  ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:53:02'!
transferLeftLegSummaryOf: aTransferLeftLeg
	
	^'Salida por transferencia de ' , aTransferLeftLeg value asString , '.'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:53:06'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:53:43'!
test15AccountSummaryForAccountWithSendingTransferShowsSendingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:53:55'!
test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.! !

!methodRemoval: ReceptiveAccountTest #test14AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:53:55'!
test14AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:55:05'!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.! !

!methodRemoval: ReceptiveAccountTest #test15AccountSummaryForAccountWithSendingTransferShowsSendingTransferAndBalance stamp: 'GDH 5/30/2021 19:55:05'!
test15AccountSummaryForAccountWithSendingTransferShowsSendingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedSummary = account accountSummary.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:55:57' prior: 50899551!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	self assert: expectedSummary = account accountSummary.! !

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:55:58'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 19:56:30' prior: 50899423!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )						  ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:57:02'!
transferRightLegSummaryOf: aTransferRightLeg
	
	^'Entrada por transferencia ' , aTransferRightLeg value asString , '.'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:57:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:57:08'!
FAILURE!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:57:08'!
FAILURE!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:57:20'!
FAILURE!

account accountSummary !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 19:58:10' prior: 50899625!
transferRightLegSummaryOf: aTransferRightLeg
	
	^'Entrada por transferencia de ' , aTransferRightLeg value asString , '.'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 19:58:13'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:59:34'!
test11TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet |
	
	expectedTransferNet := 0.  
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 19:59:45'!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet |
	
	expectedTransferNet := 0.  
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !

!methodRemoval: ReceptiveAccountTest #test11TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 19:59:45'!
test11TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet |
	
	expectedTransferNet := 0.  
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 19:59:50'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 19:59:53'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:00:14'!
transferNet
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:00:32' prior: 50899803!
transferNet

	^self balance.! !

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:00:36'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:02:54'!
test17TransferNetForAccountWithOnlyDepositsShouldBeDepositsValue
	
	| expectedTransferNet account |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:04:44'!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount to: account .
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !

!methodRemoval: ReceptiveAccountTest #test17TransferNetForAccountWithOnlyDepositsShouldBeDepositsValue stamp: 'GDH 5/30/2021 20:04:47'!
test17TransferNetForAccountWithOnlyDepositsShouldBeDepositsValue
	
	| expectedTransferNet account |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:09:21' prior: 50899808!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ currentTransferNet + aTransaction value ].
		].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:09:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:09:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:09:26'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:09:44' prior: 50899891!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:09:46'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:10:05' prior: 50900000!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	self assert: expectedTransferNet = account transferNet.! !

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:10:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:10:10'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:11:46'!
test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	self assert: expectedTransferNet = account transferNet.! !

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:11:48'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:12:04' prior: 50899917!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ currentTransferNet + aTransaction value ].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ currentTransferNet - aTransaction value ].
		].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:12:06'!
FAILURE!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:12:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:12:06'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:12:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:12:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:12:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:12:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:12:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:12:24'!
FAILURE!

account transferNet!

account transferNet!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:13:26'!
FAILURE!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:13:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:13:26'!
FAILURE!

account transactions !

self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ currentTransferNet + aTransaction value ].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ currentTransferNet - aTransaction value ].]!

self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ currentTransferNet + aTransaction value ].] !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:18:53' prior: 50900122!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^currentTransferNet + aTransaction value ].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		].! !

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:18:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:19:00'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:23:06'!
test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	self assert: expectedTransferNet = account transferNet.! !

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 5/30/2021 20:23:07'!
FAILURE!

account transferNet!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 5/30/2021 20:26:48' prior: 50900402!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		self update: currentTransferNet with: aTransaction.
		].! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 20:27:58'!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^currentTransferNet + aTransaction value ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 5/30/2021 20:28:01'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 5/30/2021 20:29:05'!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	self assert: expectedTransferNet = account transferNet.! !

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 5/30/2021 20:29:06'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 20:29:21' prior: 50900521!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^currentTransferNet + aTransaction value ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^0.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 5/30/2021 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 5/30/2021 20:29:23'!
FAILURE!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 5/30/2021 20:29:23'!
FAILURE!

account transferNet!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'GDH 5/30/2021 20:29:46' prior: 50900632!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^currentTransferNet + aTransaction value ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 5/30/2021 20:29:48'!
PASSED!

----QUIT----(30 May 2021 20:30:28) CuisUniversity-4532.image priorSource: 18102212!

----STARTUP---- (2 June 2021 12:28:41) as C:\Users\matia\Downloads\windows64\windows64\CuisUniversity-4532.image!


!classRemoval: #Withdraw stamp: 'MS 6/2/2021 12:28:53'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'MS 6/2/2021 12:28:54'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'MS 6/2/2021 12:28:54'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'MS 6/2/2021 12:28:54'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'MS 6/2/2021 12:28:54'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'MS 6/2/2021 12:28:55'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'MS 6/2/2021 12:28:56'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'MS 6/2/2021 12:28:56'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\matia\Downloads\Portfolio-Solucion.st----!

----QUIT----(2 June 2021 12:29:09) CuisUniversity-4532.image priorSource: 18382382!

----STARTUP---- (2 June 2021 12:29:30) as C:\Users\matia\Downloads\windows64\windows64\CuisUniversity-4532.image!

!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 12:33:36' prior: 50906995!
update: currentTransferNet with: aTransaction

	"aca seria affectBalance?"
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^currentTransferNet + aTransaction value ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 12:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 12:34:10'!
PASSED!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 12:34:27' prior: 50907275!
update: currentTransferNet with: aTransaction

	"aca seria affectBalance?"
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^aTransaction affectBalance: currentTransferNet].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 12:34:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 12:34:28'!
PASSED!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 12:34:36' prior: 50907370!
update: currentTransferNet with: aTransaction

	"aca seria affectBalance?"
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^aTransaction affectBalance: currentTransferNet ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 12:34:41' prior: 50907465!
update: currentTransferNet with: aTransaction

	"aca seria affectBalance TODO?"
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ ^aTransaction affectBalance: currentTransferNet ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 12:47:35' prior: 50906940!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 12:47:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:21:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:21:18'!
PASSED!

----QUIT----(2 June 2021 15:22:33) CuisUniversity-4532.image priorSource: 18419757!

----STARTUP---- (2 June 2021 15:23:00) as C:\Users\matia\Downloads\windows64\windows64\CuisUniversity-4532.image!

!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 15:23:19' prior: 50907478!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [^currentTransferNet + aTransaction value ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 15:24:38' prior: 50907683!
update: currentTransferNet with: aTransaction
	
	^aTransaction affectBalance: currentTransferNet 
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:24:41'!
FAILURE!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:24:41'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'MS 6/2/2021 15:25:42' prior: 50907695!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
	( aTransaction isKindOf: TransferLeftLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:25:43'!
PASSED!

!classRenamed: #TransferLeftLeg as: #SenderLeg stamp: 'MS 6/2/2021 15:31:08'!
Smalltalk renameClassNamed: #TransferLeftLeg as: #SenderLeg!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:08' prior: 50907788!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
	( aTransaction isKindOf: SenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:08' prior: 50907230!
initializeWith: aValue
	
	leftLeg := SenderLeg for: self.
	rightLeg := TransferRightLeg for: self.
	
	value := aValue.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:08' prior: 50907491!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: SenderLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !

!classRenamed: #SenderLeg as: #TransferSenderLeg stamp: 'MS 6/2/2021 15:31:35'!
Smalltalk renameClassNamed: #SenderLeg as: #TransferSenderLeg!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:35' prior: 50907886!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferRightLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
	( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:35' prior: 50907898!
initializeWith: aValue
	
	leftLeg := TransferSenderLeg for: self.
	rightLeg := TransferRightLeg for: self.
	
	value := aValue.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:31:35' prior: 50907905!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferRightLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !

!classRenamed: #TransferRightLeg as: #TransferReceiverLeg stamp: 'MS 6/2/2021 15:33:16'!
Smalltalk renameClassNamed: #TransferRightLeg as: #TransferReceiverLeg!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:33:16' prior: 50907932!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
	( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.! !
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:33:16' prior: 50907944!
initializeWith: aValue
	
	leftLeg := TransferSenderLeg for: self.
	rightLeg := TransferReceiverLeg for: self.
	
	value := aValue.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:33:16' prior: 50907952!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )].
		].

	summary add: self balanceSummary. 
	
	^summary ! !

!classDefinition: #AccountTransfer category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 15:34:31'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'senderLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:34:31' prior: 50907992!
initializeWith: aValue
	
	senderLeg := TransferSenderLeg for: self.
	rightLeg := TransferReceiverLeg for: self.
	
	value := aValue.! !
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:34:31' prior: 50907240!
leftLeg
	
	^senderLeg! !

!classDefinition: #AccountTransfer category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 15:34:48'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'senderLeg receiverLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:34:48' prior: 50908031!
initializeWith: aValue
	
	senderLeg := TransferSenderLeg for: self.
	receiverLeg := TransferReceiverLeg for: self.
	
	value := aValue.! !
!AccountTransfer methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:34:48' prior: 50907244!
rightLeg
	
	^receiverLeg! !
!AccountTransfer methodsFor: 'navigation' stamp: 'MS 6/2/2021 15:35:28'!
receiverLeg
	
	^receiverLeg! !
!TransferSenderLeg methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:28' prior: 50907116!
oppositeLeg
	
	^transfer receiverLeg.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:28' prior: 50906557!
test10TransferLegsCanReachOppositeLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer receiverLeg = transfer leftLeg oppositeLeg ).
	self assert: ( transfer leftLeg = transfer receiverLeg oppositeLeg ).! !
!AccountTransfer class methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:28' prior: 50907256!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self new initializeWith: aValue.
	
	senderAccount register: instance leftLeg.
	receiverAccount register: instance receiverLeg.
	
	^instance 
	! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:28' prior: 50906538!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( senderAccount hasRegistered: transfer leftLeg ).
	self deny: ( senderAccount hasRegistered: transfer receiverLeg ).
	
	self assert: ( receiverAccount hasRegistered: transfer receiverLeg ).
	self deny: ( receiverAccount hasRegistered: transfer leftLeg ).! !

!methodRemoval: AccountTransfer #rightLeg stamp: 'MS 6/2/2021 15:35:28'!
rightLeg
	
	^receiverLeg!
!AccountTransfer methodsFor: 'navigation' stamp: 'MS 6/2/2021 15:35:56'!
senderLeg
	
	^senderLeg! !
!AccountTransfer class methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:56' prior: 50908090!
register: aValue from: senderAccount to: receiverAccount
	
	| instance |
	
	instance := self new initializeWith: aValue.
	
	senderAccount register: instance senderLeg.
	receiverAccount register: instance receiverLeg.
	
	^instance 
	! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:56' prior: 50908074!
test10TransferLegsCanReachOppositeLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( transfer receiverLeg = transfer senderLeg oppositeLeg ).
	self assert: ( transfer senderLeg = transfer receiverLeg oppositeLeg ).! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:56' prior: 50908101!
test09TransferKnowsBothLegs
	
	| transfer senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := AccountTransfer register: 50 from: senderAccount to: receiverAccount.
	
	self assert: ( senderAccount hasRegistered: transfer senderLeg ).
	self deny: ( senderAccount hasRegistered: transfer receiverLeg ).
	
	self assert: ( receiverAccount hasRegistered: transfer receiverLeg ).
	self deny: ( receiverAccount hasRegistered: transfer senderLeg ).! !
!TransferReceiverLeg methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:35:56' prior: 50907161!
oppositeLeg
	
	^transfer senderLeg.! !

!methodRemoval: AccountTransfer #leftLeg stamp: 'MS 6/2/2021 15:35:56'!
leftLeg
	
	^senderLeg!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MS 6/2/2021 15:36:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MS 6/2/2021 15:36:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:36:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:36:13'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:39:29' prior: 50908000!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		
		aTransaction accountSummaryLine.
		
		"( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )]."
		].
	
	

	summary add: self balanceSummary. 
	
	^summary ! !
!AccountTransaction methodsFor: 'nil' stamp: 'MS 6/2/2021 15:39:43'!
accountSummaryLine

	^self subclassResponsibility.! !
!Deposit methodsFor: 'nil' stamp: 'MS 6/2/2021 15:39:54' overrides: 50908344!
accountSummaryLine! !
!TransferReceiverLeg methodsFor: 'nil' stamp: 'MS 6/2/2021 15:39:57' overrides: 50908344!
accountSummaryLine! !
!TransferSenderLeg methodsFor: 'nil' stamp: 'MS 6/2/2021 15:40:00' overrides: 50908344!
accountSummaryLine! !
!Withdraw methodsFor: 'nil' stamp: 'MS 6/2/2021 15:40:01' overrides: 50908344!
accountSummaryLine! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:41:29' prior: 50908349 overrides: 50908344!
accountSummaryLine

	"^self depositSummaryOf: aTransaction."! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:41:35' prior: 50908366 overrides: 50908344!
accountSummaryLine

	! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:42:00' prior: 50908372 overrides: 50908344!
accountSummaryLine

	^'Dep?ito por ' , self value asString , '.'.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:42:08' prior: 50908377 overrides: 50908344!
accountSummaryLine

	^'Dep?ito por ' , value asString , '.'.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:42:25' prior: 50908321!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | 
		
		summary add: aTransaction accountSummaryLine.
		
		"( aTransaction isKindOf: Deposit )	 ifTrue: [ summary add: ( self depositSummaryOf: aTransaction )].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ summary add: ( self withdrawSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ summary add: ( self transferLeftLegSummaryOf: aTransaction )].
		( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [ summary add: ( self transferRightLegSummaryOf: aTransaction )]."
		].
	
	

	summary add: self balanceSummary. 
	
	^summary ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:42:45' prior: 50908361 overrides: 50908344!
accountSummaryLine

	^'Extracci? por ' , value asString , '.'.! !
!TransferSenderLeg methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:43:22' prior: 50908357 overrides: 50908344!
accountSummaryLine

	^'Salida por transferencia de ' , transfer value asString , '.'.! !
!TransferReceiverLeg methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:43:56' prior: 50908353 overrides: 50908344!
accountSummaryLine

	^'Entrada por transferencia de ' , self value asString , '.'.! !
!TransferSenderLeg methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:44:04' prior: 50908419 overrides: 50908344!
accountSummaryLine

	^'Salida por transferencia de ' , self value asString , '.'.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:44:12' prior: 50908413 overrides: 50908344!
accountSummaryLine

	^'Extracci? por ' , self value asString , '.'.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:44:15' prior: 50908383 overrides: 50908344!
accountSummaryLine

	^'Dep?ito por ' , self value asString , '.'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:44:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:44:26'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:44:38' prior: 50908388!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	

	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:44:41' prior: 50908533!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary ! !

!methodRemoval: ReceptiveAccount #depositSummaryOf: stamp: 'MS 6/2/2021 15:45:00'!
depositSummaryOf: aDeposit
	
	^'Dep?ito por ' , aDeposit value asString , '.'.!

!methodRemoval: ReceptiveAccount #transferLeftLegSummaryOf: stamp: 'MS 6/2/2021 15:45:02'!
transferLeftLegSummaryOf: aTransferLeftLeg
	
	^'Salida por transferencia de ' , aTransferLeftLeg value asString , '.'.!

!methodRemoval: ReceptiveAccount #transferRightLegSummaryOf: stamp: 'MS 6/2/2021 15:45:03'!
transferRightLegSummaryOf: aTransferRightLeg
	
	^'Entrada por transferencia de ' , aTransferRightLeg value asString , '.'.!

!methodRemoval: ReceptiveAccount #withdrawSummaryOf: stamp: 'MS 6/2/2021 15:45:05'!
withdrawSummaryOf: aWithdraw
	
	^'Extracci? por ' , aWithdraw value asString , '.'.!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:47:39' prior: 50906962!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		
		self updateTransferNet: currentTransferNet with: aTransaction.
		
		( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		( aTransaction isKindOf: Deposit ) ifTrue: [ ^0 ].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ ^0 ].
	
		^currentTransferNet.
		].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:47:43' prior: 50908577!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		
		self updateTransferNet: currentTransferNet with: aTransaction.
		
		"( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		( aTransaction isKindOf: Deposit ) ifTrue: [ ^0 ].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ ^0 ]."
	
		^currentTransferNet.
		].! !
!AccountTransaction methodsFor: 'nil' stamp: 'MS 6/2/2021 15:48:19'!
updateTransferNet: currentTransferNet

	^self subclassResponsibility.! !
!Deposit methodsFor: 'nil' stamp: 'MS 6/2/2021 15:48:29' overrides: 50908614!
updateTransferNet: currentTransferNet! !
!TransferReceiverLeg methodsFor: 'nil' stamp: 'MS 6/2/2021 15:48:33' overrides: 50908614!
updateTransferNet: currentTransferNet! !
!TransferSenderLeg methodsFor: 'nil' stamp: 'MS 6/2/2021 15:48:35' overrides: 50908614!
updateTransferNet: currentTransferNet! !
!Withdraw methodsFor: 'nil' stamp: 'MS 6/2/2021 15:48:37' overrides: 50908614!
updateTransferNet: currentTransferNet! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:49:49' prior: 50908596!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		
		self updateTransferNet: currentTransferNet with: aTransaction.
		
		"( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		( aTransaction isKindOf: Deposit ) ifTrue: [ ^0 ].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ ^0 ]."
	
		].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:50:31' prior: 50908637!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		
		self updateTransferNet: currentTransferNet.
		
		"( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		( aTransaction isKindOf: Deposit ) ifTrue: [ ^currentTransferNet ].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ ^currentTransferNet ]."
		
		
	
		].! !
!TransferReceiverLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 15:51:06' prior: 50908624 overrides: 50908614!
updateTransferNet: currentTransferNet

	^currentTransferNet + self value.! !
!TransferSenderLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 15:51:23' prior: 50908629 overrides: 50908614!
updateTransferNet: currentTransferNet

	^currentTransferNet - self value.! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 15:51:35' prior: 50908619 overrides: 50908614!
updateTransferNet: currentTransferNet

	^currentTransferNet.! !
!Withdraw methodsFor: 'reports' stamp: 'MS 6/2/2021 15:51:49' prior: 50908633 overrides: 50908614!
updateTransferNet: currentTransferNet

	^currentTransferNet.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:51:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:51:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:51:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:51:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:52:17'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:52:17'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:52:17'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:52:17'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:52:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:52:19'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:52:44' prior: 50908655!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | 
		
		aTransaction updateTransferNet: currentTransferNet.
		
		"( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
		( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
		( aTransaction isKindOf: Deposit ) ifTrue: [ ^currentTransferNet ].
		( aTransaction isKindOf: Withdraw ) ifTrue: [ ^currentTransferNet ]."
		
		
	
		].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 15:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 15:52:45'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:52:56' prior: 50908806!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | aTransaction updateTransferNet: currentTransferNet.].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 15:53:00' prior: 50908907!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | aTransaction updateTransferNet: currentTransferNet].! !

Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 15:54:19'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary class methodsFor: 'nil' stamp: 'MS 6/2/2021 15:54:47'!
for: anAccount

	^self new initializeFor: anAccount.! !

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 15:55:16'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'nil' stamp: 'MS 6/2/2021 15:55:13'!
initializeFor: anAccount

	account := anAccount.! !

!classRenamed: #AccountSummary as: #GenerateAccountSummary stamp: 'MS 6/2/2021 15:56:29'!
Smalltalk renameClassNamed: #AccountSummary as: #GenerateAccountSummary!

Object subclass: #GenerateTransferNet
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #GenerateTransferNet category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 15:57:53'!
Object subclass: #GenerateTransferNet
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!GenerateTransferNet methodsFor: 'nil' stamp: 'MS 6/2/2021 15:58:10'!
initializeFor: anAccount

	account := anAccount.! !
!GenerateTransferNet class methodsFor: 'nil' stamp: 'MS 6/2/2021 15:58:21'!
for: anAccount

	^self new initializeFor: anAccount.! !
!GenerateAccountSummary methodsFor: 'nil' stamp: 'MS 6/2/2021 15:58:38'!
accountSummary! !
!GenerateTransferNet methodsFor: 'nil' stamp: 'MS 6/2/2021 15:58:42'!
transferNet! !
!GenerateAccountSummary methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:58:55' prior: 50908977!
accountSummary

	! !
!GenerateAccountSummary methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 15:59:57' prior: 50908984!
accountSummary

	^account accountSummary.! !
!GenerateTransferNet methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:00:27' prior: 50908980!
transferNet! !
!GenerateTransferNet methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:00:34' prior: 50908993!
transferNet

	^account accountSummary.! !
!GenerateTransferNet methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:00:40' prior: 50908997!
transferNet

	^account transferNet.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:02:27' prior: 50908543!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary ! !

!classRenamed: #GenerateAccountSummary as: #AccountSummaryGenerator stamp: 'MS 6/2/2021 16:05:02'!
Smalltalk renameClassNamed: #GenerateAccountSummary as: #AccountSummaryGenerator!

!classRenamed: #GenerateTransferNet as: #TransferNetGenerator stamp: 'MS 6/2/2021 16:05:14'!
Smalltalk renameClassNamed: #GenerateTransferNet as: #TransferNetGenerator!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:06:29'!
accountSummary: anAccountSummaryGenerator
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:06:44' prior: 50909026!
accountSummary: anAccountSummaryGenerator

	anAccountSummaryGenerator accountSummaryForReceptiveAccount.
	
	"| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary "! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:29:23' prior: 50909037!
accountSummary: anAccountSummaryGenerator

	anAccountSummaryGenerator accountSummaryForReceptiveAccount.
	
	"| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary "! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:29:27' prior: 50909050!
accountSummary: anAccountSummaryGenerator

	anAccountSummaryGenerator accountSummaryForReceptiveAccount.
	
	"| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary "! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:29:40' prior: 50909063!
accountSummary: anAccountSummaryGenerator

	anAccountSummaryGenerator accountSummaryForReceptiveAccount.
	
	"| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary "! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:30:18' prior: 50909076!
accountSummary: anAccountSummaryGenerator

	anAccountSummaryGenerator accountSummaryForReceptiveAccount.
	
	"| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary "! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:36:06' prior: 50909089!
accountSummary: anAccountSummaryGenerator

	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary! !
!AccountSummaryGenerator methodsFor: 'nil' stamp: 'MS 6/2/2021 16:41:49'!
depositAccountSummaryLine

	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:41:58'!
withdrawAccountSummaryLine

	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:42:29'!
AccountdepositSummaryLine

	! !

!methodRemoval: AccountSummaryGenerator #depositAccountSummaryLine stamp: 'MS 6/2/2021 16:42:29'!
depositAccountSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:42:36'!
accountDepositSummaryLine

	! !

!methodRemoval: AccountSummaryGenerator #AccountdepositSummaryLine stamp: 'MS 6/2/2021 16:42:36'!
AccountdepositSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:42:47'!
accountWithdrawSummaryLine

	! !

!methodRemoval: AccountSummaryGenerator #withdrawAccountSummaryLine stamp: 'MS 6/2/2021 16:42:47'!
withdrawAccountSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:43:16'!
accountTransferSenderLegSummaryLine

	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:43:19'!
accountTransferReceiverLegSummaryLine

	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:44:46'!
accountDepositSummaryLine: aDeposit

	^'Dep?ito por ' , aDeposit value asString , '.'.! !

!methodRemoval: AccountSummaryGenerator #accountDepositSummaryLine stamp: 'MS 6/2/2021 16:44:49'!
accountDepositSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:44:54'!
accountTransferReceiverLegSummaryLine: aDeposit

	! !

!methodRemoval: AccountSummaryGenerator #accountTransferReceiverLegSummaryLine stamp: 'MS 6/2/2021 16:44:56'!
accountTransferReceiverLegSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:45:05'!
accountTransferSenderLegSummaryLine: aSenderLeg

	! !

!methodRemoval: AccountSummaryGenerator #accountTransferSenderLegSummaryLine stamp: 'MS 6/2/2021 16:45:07'!
accountTransferSenderLegSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:45:11' prior: 50909164!
accountTransferReceiverLegSummaryLine: aReceiverLeg
	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:45:17'!
accountWithdrawSummaryLine: aWithdraw

	! !

!methodRemoval: AccountSummaryGenerator #accountWithdrawSummaryLine stamp: 'MS 6/2/2021 16:45:18'!
accountWithdrawSummaryLine

	!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:45:38' prior: 50909189!
accountWithdrawSummaryLine: aWithdraw

	^'Extracci? por ' , aWithdraw value asString , '.'.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:45:52' prior: 50909174!
accountTransferSenderLegSummaryLine: aSenderLeg

	^'Salida por transferencia de ' , aSenderLeg value asString , '.'.

	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:46:13' prior: 50909184!
accountTransferReceiverLegSummaryLine: aReceiverLeg

	^'Entrada por transferencia de ' , aReceiverLeg value asString , '.'.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:47:43' prior: 50909102!
accountSummary: anAccountSummaryGenerator

	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine: anAccountSummaryGenerator .].
	
	summary add: self balanceSummary. 
	
	^summary! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:47:58' prior: 50909220!
accountSummary: anAccountSummaryGenerator

	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: (aTransaction accountSummaryLine: anAccountSummaryGenerator) .].
	
	summary add: self balanceSummary. 
	
	^summary! !
!AccountTransaction methodsFor: 'reports' stamp: 'MS 6/2/2021 16:48:19'!
accountSummaryLine: anAccountSummaryGenerator

	^self subclassResponsibility.! !

!methodRemoval: AccountTransaction #accountSummaryLine stamp: 'MS 6/2/2021 16:48:23'!
accountSummaryLine

	^self subclassResponsibility.!
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 16:48:56' overrides: 50909242!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator ! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 16:49:13' prior: 50909252 overrides: 50909242!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountDepositSummaryLine: self.! !

!methodRemoval: Deposit #accountSummaryLine stamp: 'MS 6/2/2021 16:49:21'!
accountSummaryLine

	^'Dep?ito por ' , self value asString , '.'.!
!Withdraw methodsFor: 'reports' stamp: 'MS 6/2/2021 16:49:45' overrides: 50909242!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountWithdrawSummaryLine: self.! !

!methodRemoval: Withdraw #accountSummaryLine stamp: 'MS 6/2/2021 16:49:48'!
accountSummaryLine

	^'Extracci? por ' , self value asString , '.'.!
!TransferReceiverLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 16:50:00' overrides: 50909242!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountTransferReceiverLegSummaryLine: self.! !

!methodRemoval: TransferReceiverLeg #accountSummaryLine stamp: 'MS 6/2/2021 16:50:02'!
accountSummaryLine

	^'Entrada por transferencia de ' , self value asString , '.'.!
!TransferSenderLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 16:50:14' overrides: 50909242!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountTransferSenderLegSummaryLine: self.! !

!methodRemoval: TransferSenderLeg #accountSummaryLine stamp: 'MS 6/2/2021 16:50:16'!
accountSummaryLine

	^'Salida por transferencia de ' , self value asString , '.'.!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 16:52:21'!
transferNet: aTransferNetGenerator
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | aTransaction updateTransferNet: currentTransferNet].! !

Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:12'!
Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:12'!
Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:14'!
Object subclass: #TransferNetGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:22'!
Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:22'!
Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Solucion' stamp: 'MS 6/2/2021 16:53:22'!
Object subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetGenerator methodsFor: 'nil' stamp: 'MS 6/2/2021 16:55:49'!
updateTransferNetWhenDeposit: xxx! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:56:38' prior: 50909391!
updateTransferNetWhenDeposit: aDeposit! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:56:47'!
updateTransferNetWhenWithdraw: aWithdraw! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:57:10'!
updateTransferNetWhenTransferReceiverLeg: aReceiverLeg! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:57:19'!
updateTransferNetWhenTransferWithdrawLeg: aWithdrawLeg! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:57:55'!
updateTransferNetWhenTransferSenderLeg: aWithdrawLeg! !

!methodRemoval: TransferNetGenerator #updateTransferNetWhenTransferWithdrawLeg: stamp: 'MS 6/2/2021 16:57:55'!
updateTransferNetWhenTransferWithdrawLeg: aWithdrawLeg!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 16:58:00' prior: 50909416!
updateTransferNetWhenTransferSenderLeg: aSenderLeg! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:01:00'!
updateTransferNet: currentTransferNet xxx: aTransferNetGenerator

	^currentTransferNet.! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:02:17' prior: 50909431!
updateTransferNet: currentTransferNet xxx: aTransferNetGenerator

	^aTransferNetGenerator.
	"^currentTransferNet."! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:03:14' prior: 50909437!
updateTransferNet: currentTransferNet xxx: aTransferNetGenerator

	"^aTransferNetGenerator updateTransferNetWhenDeposit: (self yyy: currentTransferNet)."
	
	^currentTransferNet.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 17:10:32' prior: 50909306!
transferNet: aTransferNetGenerator
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | currentTransferNet + aTransaction transferNetValue: aTransferNetGenerator].! !
!TransferSenderLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 17:11:51' prior: 50908681 overrides: 50908614!
updateTransferNet: aTransferNetGenerator

	^aTransferNetGenerator transferNetValueWhenTransferSenderLeg: self.
	"^currentTransferNet - self value."! !

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'MS 6/2/2021 17:18:30'!
accountSummary
	
	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: aTransaction accountSummaryLine.].
	
	summary add: self balanceSummary. 
	
	^summary !

!methodRemoval: Deposit #updateTransferNet:xxx: stamp: 'MS 6/2/2021 17:20:21'!
updateTransferNet: currentTransferNet xxx: aTransferNetGenerator

	"^aTransferNetGenerator updateTransferNetWhenDeposit: (self yyy: currentTransferNet)."
	
	^currentTransferNet.!
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:20:25'!
transferNetValue: aTransferNetGenerator! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:20:46' prior: 50909487!
transferNetValue: aTransferNetGenerator

	^0.! !

!methodRemoval: Deposit #updateTransferNet: stamp: 'MS 6/2/2021 17:20:57'!
updateTransferNet: currentTransferNet

	^currentTransferNet.!
!Withdraw methodsFor: 'reports' stamp: 'MS 6/2/2021 17:21:08'!
transferNetValue: aTransferNetGenerator

	^0.! !

!methodRemoval: Withdraw #updateTransferNet: stamp: 'MS 6/2/2021 17:21:11'!
updateTransferNet: currentTransferNet

	^currentTransferNet.!
!TransferReceiverLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 17:21:28'!
transferNetValue: aTransferNetGenerator

	^self value.! !

!methodRemoval: TransferReceiverLeg #updateTransferNet: stamp: 'MS 6/2/2021 17:21:32'!
updateTransferNet: currentTransferNet

	^currentTransferNet + self value.!
!TransferSenderLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 17:22:01'!
transferNetValue: aTransferNetGenerator

	^self value negated.

	"^aTransferNetGenerator transferNetValueWhenTransferSenderLeg: self."
	"^currentTransferNet - self value."! !

!methodRemoval: TransferSenderLeg #updateTransferNet: stamp: 'MS 6/2/2021 17:22:04'!
updateTransferNet: aTransferNetGenerator

	^aTransferNetGenerator transferNetValueWhenTransferSenderLeg: self.
	"^currentTransferNet - self value."!

5 negated.!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:22:47'!
transferNetWhenDeposit: aDeposit! !

!methodRemoval: TransferNetGenerator #updateTransferNetWhenDeposit: stamp: 'MS 6/2/2021 17:22:47'!
updateTransferNetWhenDeposit: aDeposit!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:22:54'!
transferNetWhenTransferReceiverLeg: aReceiverLeg! !

!methodRemoval: TransferNetGenerator #updateTransferNetWhenTransferReceiverLeg: stamp: 'MS 6/2/2021 17:22:54'!
updateTransferNetWhenTransferReceiverLeg: aReceiverLeg!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:22:59'!
transferNetWhenTransferSenderLeg: aSenderLeg! !

!methodRemoval: TransferNetGenerator #updateTransferNetWhenTransferSenderLeg: stamp: 'MS 6/2/2021 17:22:59'!
updateTransferNetWhenTransferSenderLeg: aSenderLeg!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:23:05'!
transferNetWhenWithdraw: aWithdraw! !

!methodRemoval: TransferNetGenerator #updateTransferNetWhenWithdraw: stamp: 'MS 6/2/2021 17:23:05'!
updateTransferNetWhenWithdraw: aWithdraw!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:23:17' prior: 50909534!
transferNetWhenDeposit: aDeposit

	^0.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:23:23' prior: 50909563!
transferNetWhenWithdraw: aWithdraw

	^0.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:23:32' prior: 50909553!
transferNetWhenTransferSenderLeg: aSenderLeg

	^aSenderLeg value.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:23:39' prior: 50909582!
transferNetWhenTransferSenderLeg: aSenderLeg

	^aSenderLeg value negated.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:24:14' prior: 50909543!
transferNetWhenTransferReceiverLeg: aReceiverLeg

	^aReceiverLeg value.! !
!TransferSenderLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 17:24:56' prior: 50909518!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenTransferSenderLeg: self.

	"^self value negated."

	"^aTransferNetGenerator transferNetValueWhenTransferSenderLeg: self."
	"^currentTransferNet - self value."! !
!Withdraw methodsFor: 'reports' stamp: 'MS 6/2/2021 17:25:17' prior: 50909499!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenWithdraw: self.
	
	"^0."! !
!TransferReceiverLeg methodsFor: 'reports' stamp: 'MS 6/2/2021 17:25:37' prior: 50909508!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenTransferReceiverLeg: self.

	"^self value."! !
!Deposit methodsFor: 'reports' stamp: 'MS 6/2/2021 17:26:00' prior: 50909491!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenDeposit: self.
	
	"^0."! !

!methodRemoval: ReceptiveAccount #transferNet stamp: 'MS 6/2/2021 17:27:41'!
transferNet
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | aTransaction updateTransferNet: currentTransferNet].!

!methodRemoval: ReceptiveAccount #update:with: stamp: 'MS 6/2/2021 17:28:04'!
update: currentTransferNet with: aTransaction
	
	( aTransaction isKindOf: TransferReceiverLeg ) ifTrue: [^currentTransferNet + aTransaction value  ].
	( aTransaction isKindOf: TransferSenderLeg ) ifTrue: [ ^currentTransferNet - aTransaction value ].
	
	^currentTransferNet.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MS 6/2/2021 17:28:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MS 6/2/2021 17:29:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MS 6/2/2021 17:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:29:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:29:14'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:30:52' prior: 50906638!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet |
	
	expectedTransferNet := 0.  
	
	"(TransferNetGenerator for: ReceptiveAccount new) transferNet."
	
	self assert: expectedTransferNet = ReceptiveAccount new transferNet.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:31:27' prior: 50909002!
transferNet

	^account transferNet: self.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'MS 6/2/2021 17:31:39' prior: 50908988!
accountSummary

	^account accountSummary: self.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:32:43' prior: 50909668!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet |
	
	expectedTransferNet := 0.  
	
	self assert: expectedTransferNet = (TransferNetGenerator for: ReceptiveAccount new transferNet).
	
	"self assert: expectedTransferNet = ReceptiveAccount new transferNet."! !

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:32:44'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:33:41' prior: 50909689!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetGenerator for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = (aTransferNetGenerator transferNet).
	
	"self assert: expectedTransferNet = ReceptiveAccount new transferNet."! !

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:34:11'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:34:11'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:34:52' prior: 50906646!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := (TransferNetGenerator for: account).
	
	self assert: expectedTransferNet = account transferNet.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:35:07' prior: 50909731!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetGenerator for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:35:08'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MS 6/2/2021 17:35:30' prior: 50909453!
transferNet: aTransferNetGenerator
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | currentTransferNet + (aTransaction transferNetValue: aTransferNetGenerator)].! !

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:35:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:35:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:36:09'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:36:39' prior: 50906659!
test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetGenerator for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:36:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:36:40'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:36:43'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:37:03' prior: 50906672!
test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetGenerator for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:37:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:37:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:37:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:37:27' prior: 50906687!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetGenerator for: Account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:37:28'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:37:46' prior: 50910012!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetGenerator for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:37:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:37:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:37:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:37:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:37:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:37:51'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:38:32' prior: 50906572!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryGenerator for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:38:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:38:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:38:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:38:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:38:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:38:34'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:38:57' prior: 50906582!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Dep?ito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryGenerator for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:38:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:38:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:38:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:38:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:38:58'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:46:38' prior: 50906595!
test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracci? por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryGenerator for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:46:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:46:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:46:39'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:46:58' prior: 50906608!
test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryGenerator for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'MS 6/2/2021 17:47:20' prior: 50906623!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryGenerator for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'MS 6/2/2021 17:47:30'!
PASSED!

----QUIT----(2 June 2021 17:54:05) CuisUniversity-4532.image priorSource: 18432811!

----STARTUP---- (2 June 2021 20:14:56) as C:\Applications\CuisUniversity\windows64\windows64\CuisUniversity-4532.image!


!classRemoval: #AccountTransfer stamp: 'GDH 6/2/2021 20:15:03'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'GDH 6/2/2021 20:15:03'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferRightLeg stamp: 'GDH 6/2/2021 20:15:03'!
AccountTransaction subclass: #TransferRightLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferLeftLeg stamp: 'GDH 6/2/2021 20:15:04'!
AccountTransaction subclass: #TransferLeftLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'GDH 6/2/2021 20:15:04'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'GDH 6/2/2021 20:15:04'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'GDH 6/2/2021 20:15:04'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'GDH 6/2/2021 20:15:04'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'GDH 6/2/2021 20:15:05'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'GDH 6/2/2021 20:15:05'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'GDH 6/2/2021 20:15:05'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\Gabriel\Downloads\Portfolio-Solucion.st----!

!classRemoval: #AccountTransfer stamp: 'GDH 6/2/2021 21:17:19'!
Object subclass: #AccountTransfer
	instanceVariableNames: 'leftLeg rightLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'GDH 6/2/2021 21:17:19'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferRightLeg stamp: 'GDH 6/2/2021 21:17:19'!
AccountTransaction subclass: #TransferRightLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferLeftLeg stamp: 'GDH 6/2/2021 21:17:19'!
AccountTransaction subclass: #TransferLeftLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'GDH 6/2/2021 21:17:20'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'GDH 6/2/2021 21:17:20'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'GDH 6/2/2021 21:17:20'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'GDH 6/2/2021 21:17:20'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'GDH 6/2/2021 21:17:20'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'GDH 6/2/2021 21:17:21'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'GDH 6/2/2021 21:17:21'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\Gabriel\Downloads\Portfolio-Solucion (1).st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 21:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 21:26:04'!
PASSED!

!classRenamed: #TransferNetGenerator as: #TransferNetReporter stamp: 'GDH 6/2/2021 21:32:18'!
Smalltalk renameClassNamed: #TransferNetGenerator as: #TransferNetReporter!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:18' prior: 50904265!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = (aTransferNetGenerator transferNet).
	
	"self assert: expectedTransferNet = ReceptiveAccount new transferNet."! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:18' prior: 50904311!
test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:18' prior: 50904295!
test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:18' prior: 50904329!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetReporter for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:18' prior: 50904279!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !

!classRenamed: #AccountSummaryGenerator as: #AccountSummaryReporter stamp: 'GDH 6/2/2021 21:32:31'!
Smalltalk renameClassNamed: #AccountSummaryGenerator as: #AccountSummaryReporter!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:31' prior: 50904228!
test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:31' prior: 50904211!
test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:31' prior: 50904181!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:31' prior: 50904246!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:32:31' prior: 50904194!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !

Object subclass: #ReceptiveAccountReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccountReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 21:37:39'!
Object subclass: #ReceptiveAccountReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountReporter class methodsFor: 'no messages' stamp: 'GDH 6/2/2021 21:38:13'!
for: anAccount

	^self new initializeFor: anAccount.! !

!classDefinition: #ReceptiveAccountReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 21:38:35'!
Object subclass: #ReceptiveAccountReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountReporter methodsFor: 'nil' stamp: 'GDH 6/2/2021 21:38:31'!
initializeFor: anAccount

	account := anAccount.! !
!ReceptiveAccountReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:38:38' prior: 50905353!
initializeFor: anAccount

	account := anAccount! !
!ReceptiveAccountReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 21:39:18'!
report
	
	^self subclassResponsibility ! !
!ReceptiveAccountReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:40:56'!
reportDeposit: aDeposit
	
	^self subclassResponsibility! !
!ReceptiveAccountReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:41:08'!
reportWithdraw: aWithdraw
	
	^self subclassResponsibility! !
!ReceptiveAccountReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:41:24'!
reportTransferReceiverLeg: aTransferReceiverLeg
	
	^self subclassResponsibility! !
!ReceptiveAccountReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:41:33'!
reportTransferSenderLeg: aTransferSenderLeg
	
	^self subclassResponsibility! !
!ReceptiveAccountReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:41:46' prior: 50905373!
reportWithdraw: aWithdraw
	
	^self subclassResponsibility! !

ReceptiveAccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 21:42:16'!
ReceptiveAccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

ReceptiveAccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 21:42:24'!
ReceptiveAccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: AccountSummaryReporter #initializeFor: stamp: 'GDH 6/2/2021 21:42:50'!
initializeFor: anAccount

	account := anAccount.!

!methodRemoval: TransferNetReporter #initializeFor: stamp: 'GDH 6/2/2021 21:42:53'!
initializeFor: anAccount

	account := anAccount.!

!methodRemoval: TransferNetReporter class #for: stamp: 'GDH 6/2/2021 21:42:56'!
for: anAccount

	^self new initializeFor: anAccount.!

!methodRemoval: AccountSummaryReporter class #for: stamp: 'GDH 6/2/2021 21:42:58'!
for: anAccount

	^self new initializeFor: anAccount.!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:43:11' overrides: 50905363!
report

	^account transferNet: self.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:43:47' prior: 50905442 overrides: 50905363!
report

	^account evaluateReport: self.! !

!methodRemoval: TransferNetReporter #transferNet stamp: 'GDH 6/2/2021 21:43:56'!
transferNet

	^account transferNet: self.!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:44:16' overrides: 50905368!
reportDeposit: aDeposit

	^0.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:44:40' overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	^TransferReceiverLeg value.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:44:52' overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	^TransferSenderLeg value negated.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:45:26' overrides: 50905392!
reportWithdraw: aWithdraw

	^0.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:45:37' prior: 50905448 overrides: 50905363!
report

	^account transferNet: self.! !

!methodRemoval: TransferNetReporter #transferNetWhenDeposit: stamp: 'GDH 6/2/2021 21:45:40'!
transferNetWhenDeposit: aDeposit

	^0.!

!methodRemoval: TransferNetReporter #transferNetWhenTransferReceiverLeg: stamp: 'GDH 6/2/2021 21:45:42'!
transferNetWhenTransferReceiverLeg: aReceiverLeg

	^aReceiverLeg value.!

!methodRemoval: TransferNetReporter #transferNetWhenTransferSenderLeg: stamp: 'GDH 6/2/2021 21:45:43'!
transferNetWhenTransferSenderLeg: aSenderLeg

	^aSenderLeg value negated.!

!methodRemoval: TransferNetReporter #transferNetWhenWithdraw: stamp: 'GDH 6/2/2021 21:45:44'!
transferNetWhenWithdraw: aWithdraw

	^0.!
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:45:57' overrides: 50905363!
report

	^account accountSummary: self.! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:46:06' overrides: 50905368!
reportDeposit: aDeposit

	^'Depósito por ' , aDeposit value asString , '.'.! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:46:31' overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	^'Entrada por transferencia de ' , aTransferReceiverLeg value asString , '.'.
	! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:46:40' prior: 50905462 overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	^aTransferReceiverLeg value.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:46:43' prior: 50905468 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	^aTransferSenderLeg value negated.! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:47:03' overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	^'Entrada por transferencia de ' , aTransferSenderLeg value asString , '.'.
	! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:47:15' prior: 50905538 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	^'Salida por transferencia de ' , aTransferSenderLeg value asString , '.'.
	! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'GDH 6/2/2021 21:47:27' overrides: 50905392!
reportWithdraw: aWithdraw

	^'Extracción por ' , aWithdraw value asString , '.'.! !

!methodRemoval: AccountSummaryReporter #accountWithdrawSummaryLine: stamp: 'GDH 6/2/2021 21:47:31'!
accountWithdrawSummaryLine: aWithdraw

	^'Extracción por ' , aWithdraw value asString , '.'.!

!methodRemoval: AccountSummaryReporter #accountTransferSenderLegSummaryLine: stamp: 'GDH 6/2/2021 21:47:33'!
accountTransferSenderLegSummaryLine: aSenderLeg

	^'Salida por transferencia de ' , aSenderLeg value asString , '.'.

	!

!methodRemoval: AccountSummaryReporter #accountTransferReceiverLegSummaryLine: stamp: 'GDH 6/2/2021 21:47:35'!
accountTransferReceiverLegSummaryLine: aReceiverLeg

	^'Entrada por transferencia de ' , aReceiverLeg value asString , '.'.
	!

!methodRemoval: AccountSummaryReporter #accountDepositSummaryLine: stamp: 'GDH 6/2/2021 21:47:45'!
accountDepositSummaryLine: aDeposit

	^'Depósito por ' , aDeposit value asString , '.'.!

!methodRemoval: AccountSummaryReporter #accountSummary stamp: 'GDH 6/2/2021 21:47:48'!
accountSummary

	^account accountSummary: self.!
!Deposit methodsFor: 'reports' stamp: 'GDH 6/2/2021 21:55:20'!
reportTransaction: aReceptiveAccountReporter

	^aReceptiveAccountReporter reportDeposit: self.! !
!AccountTransaction methodsFor: 'reports' stamp: 'GDH 6/2/2021 21:55:45'!
reportTransaction: aReceptiveAccountReporter

	^self subclassResponsibility.! !
!TransferReceiverLeg methodsFor: 'reports' stamp: 'GDH 6/2/2021 21:56:08' overrides: 50905596!
reportTransaction: aReceptiveAccountReporter

	^aReceptiveAccountReporter reportTransferReceiverLeg: self.! !
!TransferSenderLeg methodsFor: 'reports' stamp: 'GDH 6/2/2021 21:56:19' overrides: 50905596!
reportTransaction: aReceptiveAccountReporter

	^aReceptiveAccountReporter reportTransferSenderLeg: self.! !
!Withdraw methodsFor: 'reports' stamp: 'GDH 6/2/2021 21:56:38' overrides: 50905596!
reportTransaction: aReceptiveAccountReporter

	^aReceptiveAccountReporter reportWithdraw: self.! !

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 21:57:45'!
ReceptiveAccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNetAccumulated'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:57:44' prior: 50905457 overrides: 50905368!
reportDeposit: aDeposit

	transferNetAccumulated + 0.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:58:02' prior: 50905474 overrides: 50905392!
reportWithdraw: aWithdraw

	transferNetAccumulated + 0.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:58:25' prior: 50905531 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg
	
	aTransferSenderLeg value negated + 0.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 21:58:36' prior: 50905524 overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	aTransferReceiverLeg value + 0.! !
!TransferNetReporter methodsFor: 'initialization' stamp: 'GDH 6/2/2021 21:59:17' overrides: 50905358!
initializeFor: aReceptiveAccount! !
!TransferNetReporter methodsFor: 'initialization' stamp: 'GDH 6/2/2021 21:59:33' prior: 50905657 overrides: 50905358!
initializeFor: aReceptiveAccount
	
	super initializeFor: aReceptiveAccount .
	
	transferNetAccumulated = 0.! !
!ReceptiveAccountReporter methodsFor: 'initialization' stamp: 'GDH 6/2/2021 21:59:59' prior: 50905358!
initializeFor: aReceptiveAccount

	account := aReceptiveAccount! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:01:00'!
makeReport: aReceptiveAccountReporter
	
! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:02:18' prior: 50904596!
transferNet: aTransferNetReporter
		
	^self transactions do: [ :aTransaction | aTransaction reportTransaction: aTransferNetReporter].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:02:22' prior: 50905679!
transferNet: aTransferNetReporter
		
	^self transactions do: [ :aTransaction | aTransaction reportTransaction: aTransferNetReporter ].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:03:30' prior: 50904585!
accountSummary: anAccountSummaryGenerator

	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: (aTransaction accountSummaryLine: anAccountSummaryGenerator) .].
	
	summary add: self balanceSummary. 
	
	^summary! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:06:53' prior: 50905687!
transferNet: aTransferNetReporter
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | currentTransferNet + (aTransaction transferNetValue: aTransferNetReporter)]! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 22:16:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:16:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:16:49'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:17:25' prior: 50905695!
accountSummary: anAccountSummaryGenerator

	| summary |
	
	summary := OrderedCollection new.
	
	self transactions do: [ :aTransaction | summary add: (aTransaction reportTransaction: anAccountSummaryGenerator) .].
	
	summary add: self balanceSummary. 
	
	^summary! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:17:38' prior: 50905707!
transferNet: aTransferNetReporter
		
	^self transactions inject: 0 into: [ :currentTransferNet :aTransaction | currentTransferNet + (aTransaction reportTransaction: aTransferNetReporter)]! !
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:21:08' prior: 50905479 overrides: 50905363!
report

	account transferNet: self.
	
	^transferNetAccumulated! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:21:40' prior: 50905871!
transferNet: aTransferNetReporter
		
	^self transactions do: [ :aTransaction | aTransaction reportTransaction: aTransferNetReporter ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:21:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:21:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:22:01'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:22:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:22:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:22:27'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:22:46' prior: 50905277!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:22:52' prior: 50905310!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:22:57' prior: 50905259!
test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:02' prior: 50905240!
test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:28' prior: 50905291!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:38' prior: 50905146!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = (aTransferNetGenerator report).
	
	"self assert: expectedTransferNet = ReceptiveAccount new transferNet."! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:43' prior: 50905218!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:51' prior: 50905180!
test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:54' prior: 50905161!
test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 22:23:57' prior: 50905197!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetReporter for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:24:00'!
ERROR!
!TransferNetReporter methodsFor: 'initialization' stamp: 'GDH 6/2/2021 22:24:16' prior: 50905662 overrides: 50905669!
initializeFor: aReceptiveAccount
	
	super initializeFor: aReceptiveAccount .
	
	transferNetAccumulated := 0.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:24:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:24:18'!
FAILURE!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:24:18'!
FAILURE!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:24:18'!
FAILURE!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:24:18'!
FAILURE!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:24:22'!
FAILURE!

aTransferNetGenerator report!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:24:51'!
FAILURE!
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:25:52' prior: 50905651 overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	transferNetAccumulated := aTransferReceiverLeg value + transferNetAccumulated.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:26:00' prior: 50905632 overrides: 50905368!
reportDeposit: aDeposit

	transferNetAccumulated := transferNetAccumulated + 0.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:26:10' prior: 50905644 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg
	
	transferNetAccumulated := aTransferSenderLeg value negated + transferNetAccumulated.! !
!TransferNetReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:26:18' prior: 50905638 overrides: 50905392!
reportWithdraw: aWithdraw

	transferNetAccumulated := transferNetAccumulated + 0.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:26:25'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:30:38' prior: 50905859!
accountSummary: anAccountSummaryReporter
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: anAccountSummaryReporter. ].! !

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 22:32:14'!
ReceptiveAccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryReporter methodsFor: 'initialization' stamp: 'GDH 6/2/2021 22:31:54' overrides: 50905669!
initializeFor: aReceptiveAccount
	
	super initializeFor: aReceptiveAccount .
	
	accountSummary := OrderedCollection new.! !

!methodRemoval: TransferNetReporter #initializeFor: stamp: 'GDH 6/2/2021 22:33:45'!
initializeFor: aReceptiveAccount
	
	super initializeFor: aReceptiveAccount .
	
	transferNetAccumulated := 0.!
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:34:03' prior: 50905881 overrides: 50905363!
report

	transferNetAccumulated := 0.

	account transferNet: self.
	
	^transferNetAccumulated! !
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:34:05' prior: 50906486 overrides: 50905363!
report

	transferNetAccumulated := 0.

	account transferNet: self.
	
	^transferNetAccumulated! !

!methodRemoval: AccountSummaryReporter #initializeFor: stamp: 'GDH 6/2/2021 22:34:09'!
initializeFor: aReceptiveAccount
	
	super initializeFor: aReceptiveAccount .
	
	accountSummary := OrderedCollection new.!
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:34:59' prior: 50905504 overrides: 50905363!
report
	
	accountSummary := OrderedCollection new.

	^account accountSummary: self.! !
!AccountSummaryReporter methodsFor: 'report - private' stamp: 'GDH 6/2/2021 22:38:27'!
balanceSummaryLine

	^'Balance = ' , account balance asString.! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:38:58' prior: 50906507 overrides: 50905363!
report
	
	accountSummary := OrderedCollection new.

	account accountSummary: self.
	
	accountSummary add: self balanceSummaryLine .
	
	^accountSummary ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:39:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:39:08'!
FAILURE!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:39:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:39:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:39:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:39:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:39:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:39:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:39:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:39:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:39:11'!
FAILURE!
!AccountSummaryReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:39:59' prior: 50905509 overrides: 50905368!
reportDeposit: aDeposit

	accountSummary add: 'Depósito por ' , aDeposit value asString , '.'.! !
!AccountSummaryReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:40:58' prior: 50905515 overrides: 50905379!
reportTransferReceiverLeg: aTransferReceiverLeg

	accountSummary add: 'Entrada por transferencia de ' , aTransferReceiverLeg value asString , '.'.
	! !
!AccountSummaryReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:41:03' prior: 50905546 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	accountSummary add:  'Salida por transferencia de ' , aTransferSenderLeg value asString , '.'.
	! !
!AccountSummaryReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:41:11' prior: 50905554 overrides: 50905392!
reportWithdraw: aWithdraw

	accountSummary add: 'Extracción por ' , aWithdraw value asString , '.'.! !
!AccountSummaryReporter methodsFor: 'visit transaction operations' stamp: 'GDH 6/2/2021 22:41:30' prior: 50906633 overrides: 50905385!
reportTransferSenderLeg: aTransferSenderLeg

	accountSummary add: 'Salida por transferencia de ' , aTransferSenderLeg value asString , '.'.
	! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:41:58' prior: 50906519 overrides: 50905363!
report
	
	accountSummary := OrderedCollection new.

	account accountSummary: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary ! !

!methodRemoval: AccountSummaryReporter #balanceSummaryLine stamp: 'GDH 6/2/2021 22:42:04'!
balanceSummaryLine

	^'Balance = ' , account balance asString.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:42:38'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 22:44:12' prior: 50905674!
makeReport: aReceptiveAccountReporter
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: aReceptiveAccountReporter. ].
! !

!methodRemoval: ReceptiveAccount #transferNet: stamp: 'GDH 6/2/2021 22:44:21'!
transferNet: aTransferNetReporter
		
	^self transactions do: [ :aTransaction | aTransaction reportTransaction: aTransferNetReporter ]!

!methodRemoval: ReceptiveAccount #accountSummary: stamp: 'GDH 6/2/2021 22:44:23'!
accountSummary: anAccountSummaryReporter
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: anAccountSummaryReporter. ].!

!methodRemoval: ReceptiveAccount #balanceSummary stamp: 'GDH 6/2/2021 22:44:28'!
balanceSummary
	
	^'Balance = ' , self balance asString.!
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:44:36' prior: 50906659 overrides: 50905363!
report
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary ! !
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/2/2021 22:44:43' prior: 50906493 overrides: 50905363!
report

	transferNetAccumulated := 0.

	account makeReport: self.
	
	^transferNetAccumulated! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 22:44:54'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:00:23'!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary portfolio anAccountSummaryReporter |
	
	expectedAccountSummary := 
		'Depósito por 100.', 
		'Extracción por 50.',
		'Salida por transferencia de 20.',
		'Entrada por transferencia de 30.',
		'Balance = 60'.
	
	portfolio := Portfolio new.
	
	"AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account ."
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:00:29'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:02:41' prior: 50906879!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter simplePortfolio composedPortfolio account |
	
	expectedAccountSummary := 
		'Depósito por 100.', 
		'Extracción por 50.',
		'Salida por transferencia de 20.',
		'Entrada por transferencia de 30.',
		'Balance = 60'.
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio new.
	composedPortfolio := Portfolio with: simplePortfolio.
	composedPortfolio add: account.
	
	"AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account ."
	
	anAccountSummaryReporter := AccountSummaryReporter for: simplePortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:03:10' prior: 50906907!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter portfolio account |
	
	expectedAccountSummary := 
		'Depósito por 100.', 
		'Extracción por 50.',
		'Salida por transferencia de 20.',
		'Entrada por transferencia de 30.',
		'Balance = 60'.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	"AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account ."
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:05:21' prior: 50906937!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter portfolio account |
	
	expectedAccountSummary := 
		'Depósito por 100.', 
		'Extracción por 50.',
		'Salida por transferencia de 20.',
		'Entrada por transferencia de 30.',
		'Balance = 60'.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:05:24'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'GDH 6/2/2021 23:06:18'!
makeReport: anAccountSummaryReporter 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'GDH 6/2/2021 23:09:56' prior: 50906994!
makeReport: anAccountSummaryReporter 
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: anAccountSummaryReporter ].! !

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:10:02'!
FAILURE!

anAccountSummaryReporter report!
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:10:54' prior: 50906964!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter portfolio account |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 23:10:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 23:10:57'!
PASSED!

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:10:57'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:12:32'!
test17TransferNetCalculatesNetValueOfTransferTransactions
	
	| expectedTransferNet aTransferNetReporter portfolio account |
	
	expectedTransferNet := 10.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	aTransferNetReporter := TransferNetReporter for: portfolio .
	
	self assert: expectedTransferNet = aTransferNetReporter report.! !

!testRun: #PortfolioTest #test17TransferNetCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!testRun: #PortfolioTest #test17TransferNetCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:12:35'!
PASSED!

!classRenamed: #ReceptiveAccountReporter as: #AccountReporter stamp: 'GDH 6/2/2021 23:13:02'!
Smalltalk renameClassNamed: #ReceptiveAccountReporter as: #AccountReporter!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:13:57' prior: 50906151!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = (aTransferNetGenerator report).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:14:02' prior: 50907199!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !
!Deposit methodsFor: 'reports' stamp: 'GDH 6/2/2021 23:15:01' prior: 50904753!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenDeposit: self.! !

!methodRemoval: AccountTransaction #accountSummaryLine: stamp: 'GDH 6/2/2021 23:15:39'!
accountSummaryLine: anAccountSummaryGenerator

	^self subclassResponsibility.!

!methodRemoval: AccountTransaction #updateTransferNet: stamp: 'GDH 6/2/2021 23:15:42'!
updateTransferNet: currentTransferNet

	^self subclassResponsibility.!

!methodRemoval: Deposit #accountSummaryLine: stamp: 'GDH 6/2/2021 23:15:46'!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountDepositSummaryLine: self.!

!methodRemoval: Deposit #transferNetValue: stamp: 'GDH 6/2/2021 23:15:47'!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenDeposit: self.!

!methodRemoval: TransferReceiverLeg #accountSummaryLine: stamp: 'GDH 6/2/2021 23:15:49'!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountTransferReceiverLegSummaryLine: self.!

!methodRemoval: TransferReceiverLeg #transferNetValue: stamp: 'GDH 6/2/2021 23:15:50'!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenTransferReceiverLeg: self.

	"^self value."!

!methodRemoval: TransferSenderLeg #accountSummaryLine: stamp: 'GDH 6/2/2021 23:15:52'!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountTransferSenderLegSummaryLine: self.!

!methodRemoval: TransferSenderLeg #transferNetValue: stamp: 'GDH 6/2/2021 23:15:53'!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenTransferSenderLeg: self.

	"^self value negated."

	"^aTransferNetGenerator transferNetValueWhenTransferSenderLeg: self."
	"^currentTransferNet - self value."!

!methodRemoval: Withdraw #accountSummaryLine: stamp: 'GDH 6/2/2021 23:15:55'!
accountSummaryLine: anAccountSummaryGenerator

	^anAccountSummaryGenerator accountWithdrawSummaryLine: self.!

!methodRemoval: Withdraw #transferNetValue: stamp: 'GDH 6/2/2021 23:15:56'!
transferNetValue: aTransferNetGenerator

	^aTransferNetGenerator transferNetWhenWithdraw: self.
	
	"^0."!

AccountTransaction subclass: #TransferLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLeg category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 23:18:40'!
AccountTransaction subclass: #TransferLeg
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLeg subclass: #TransferReceiverLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferReceiverLeg category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 23:18:50'!
TransferLeg subclass: #TransferReceiverLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLeg subclass: #TransferSenderLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferSenderLeg category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 23:18:58'!
TransferLeg subclass: #TransferSenderLeg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferLeg methodsFor: 'navigation' stamp: 'GDH 6/2/2021 23:19:32'!
oppositeLeg
	
	^transfer senderLeg.! !

!methodRemoval: TransferReceiverLeg #oppositeLeg stamp: 'GDH 6/2/2021 23:19:32'!
oppositeLeg
	
	^transfer senderLeg.!
!TransferLeg methodsFor: 'navigation' stamp: 'GDH 6/2/2021 23:19:53' prior: 50907328!
oppositeLeg
	
	^self subclassResponsibility .! !
!TransferReceiverLeg methodsFor: 'navigation' stamp: 'GDH 6/2/2021 23:19:57' overrides: 50907336!
oppositeLeg
	
	^transfer senderLeg.! !
!TransferLeg methodsFor: 'initialization' stamp: 'GDH 6/2/2021 23:20:13'!
initializeFor: aTransfer
	
	transfer := aTransfer .! !

!methodRemoval: TransferReceiverLeg #initializeFor: stamp: 'GDH 6/2/2021 23:20:13'!
initializeFor: aTransfer
	
	transfer := aTransfer .!
!TransferLeg methodsFor: 'value' stamp: 'GDH 6/2/2021 23:20:17' overrides: 50904686!
value
	
	^transfer value.! !

!methodRemoval: TransferReceiverLeg #value stamp: 'GDH 6/2/2021 23:20:17'!
value
	
	^transfer value.!

!methodRemoval: TransferSenderLeg #value stamp: 'GDH 6/2/2021 23:20:26'!
value
	
	^transfer value.!

!methodRemoval: TransferSenderLeg #initializeFor: stamp: 'GDH 6/2/2021 23:20:34'!
initializeFor: aTransfer
	
	transfer := aTransfer .!
!TransferLeg methodsFor: 'balance' stamp: 'GDH 6/2/2021 23:21:02' overrides: 50904690!
affectBalance: aBalance

	^aBalance + transfer value. ! !

!methodRemoval: TransferReceiverLeg #affectBalance: stamp: 'GDH 6/2/2021 23:21:02'!
affectBalance: aBalance

	^aBalance + transfer value. !
!TransferReceiverLeg methodsFor: 'balance' stamp: 'GDH 6/2/2021 23:21:05' overrides: 50907369!
affectBalance: aBalance

	^aBalance + transfer value. ! !
!TransferLeg methodsFor: 'balance' stamp: 'GDH 6/2/2021 23:21:11' prior: 50907369 overrides: 50904690!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferLeg methodsFor: 'navigation' stamp: 'GDH 6/2/2021 23:21:19' prior: 50907336!
oppositeLeg
	
	self subclassResponsibility .! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #PortfolioTest #test17TransferNetCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:21:43'!
PASSED!

TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportTest category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 23:22:38'!
TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #AccountReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporterTest category: 'Portfolio-Solucion' stamp: 'GDH 6/2/2021 23:24:20'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReportTest stamp: 'GDH 6/2/2021 23:24:23'!
TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporterTest methodsFor: 'no messages' stamp: 'GDH 6/2/2021 23:24:45'!
test1AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:25:05'!
test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !

!methodRemoval: AccountReporterTest #test1AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:25:11'!
test1AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:25:32'!
test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:25:53'!
test11AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!

!methodRemoval: ReceptiveAccountTest #test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:25:55'!
test12AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:26:05'!
test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:26:10'!
test13AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:26:17'!
test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:26:21'!
test14AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:26:29'!
test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:26:36'!
test15AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:26:41'!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:26:56'!
test06TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!methodRemoval: AccountReporterTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:26:56'!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!

!methodRemoval: ReceptiveAccountTest #test16TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:27:13'!
test16TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:27:25'!
test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:27:29'!
test17TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:27:41'!
test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:27:46'!
test18TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:27:56'!
test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:28:06'!
test19TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:28:14'!
test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetReporter for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator report.! !

!methodRemoval: ReceptiveAccountTest #test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:28:18'!
test20TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetReporter for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator report.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 23:28:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 23:28:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 23:28:21'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #PortfolioTest #test17TransferNetCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:28:22'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:28:24'!
PASSED!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:28:51'!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter portfolio account |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!methodRemoval: PortfolioTest #test16AccountSummaryShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:28:57'!
test16AccountSummaryShowsAllTransactionsAndBalance
	
	| expectedAccountSummary anAccountSummaryReporter portfolio account |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	anAccountSummaryReporter := AccountSummaryReporter for: portfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:29:10'!
test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions
	
	| expectedTransferNet aTransferNetReporter portfolio account |
	
	expectedTransferNet := 10.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	aTransferNetReporter := TransferNetReporter for: portfolio .
	
	self assert: expectedTransferNet = aTransferNetReporter report.! !

!methodRemoval: PortfolioTest #test17TransferNetCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:29:17'!
test17TransferNetCalculatesNetValueOfTransferTransactions
	
	| expectedTransferNet aTransferNetReporter portfolio account |
	
	expectedTransferNet := 10.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	aTransferNetReporter := TransferNetReporter for: portfolio .
	
	self assert: expectedTransferNet = aTransferNetReporter report.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/2/2021 23:29:19'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/2/2021 23:29:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:29:23'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'GDH 6/2/2021 23:47:11' prior: 50906999!
makeReport: anAccountSummaryReporter 
	
	accounts do: [ :aTransaction | aTransaction reportTransaction: anAccountSummaryReporter ].! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:47:15'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:47:16'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:47:16'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'GDH 6/2/2021 23:49:26' prior: 50908356!
makeReport: anAccountReporter 
	
	accounts do: [ :anAccount | anAccount makeReport: anAccountReporter ].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/2/2021 23:49:36' prior: 50906755!
makeReport: anAccountReporter
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: anAccountReporter. ].
! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/2/2021 23:58:42' prior: 50908108!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary parentSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	parentSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50'
		with: 'Balance = 50'.
		
	expectedAccountSummary := parentSummary addAll: childSummary .
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:58:46'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/2/2021 23:59:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/2/2021 23:59:17'!
FAILURE!

anAccountSummaryReporter report!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:00:52'!
FAILURE!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:00:52'!
FAILURE!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:01:37' prior: 50908431!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50'
		with: 'Balance = 50'.
		
	expectedAccountSummary addAll: childSummary .
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:01:45'!
FAILURE!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:02:34' prior: 50908545!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50'
		with: 'Balance = 50'.
		
	expectedAccountSummary addAll: childSummary .
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	parentPortfolio add: childPortfolio .
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter report.! !

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:02:36'!
FAILURE!

anAccountSummaryReporter report.!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:04:24'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:04:24'!
FAILURE!

anAccountSummaryReporter report!

!methodRemoval: TransferLeg #affectBalance: stamp: 'GDH 6/3/2021 00:12:38'!
affectBalance: aBalance

	self subclassResponsibility !

!methodRemoval: TransferLeg #value stamp: 'GDH 6/3/2021 00:12:48'!
value
	
	^transfer value.!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:13:43'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:13:55'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:13:55'!
ERROR!
!TransferLeg methodsFor: 'value' stamp: 'GDH 6/3/2021 00:14:27' overrides: 50904686!
value
	
	^transfer value.! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:14:33'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:14:33'!
FAILURE!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:22:06'!
FAILURE!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:22:06'!
FAILURE!
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:28:05'!
reportAccountSummary
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary ! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:28:16'!
accountSummary
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary ! !

!methodRemoval: AccountSummaryReporter #reportAccountSummary stamp: 'GDH 6/3/2021 00:28:16'!
reportAccountSummary
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:30:42'!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:31:03' prior: 50908797!
accountSummary
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
		
	^accountSummary ! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:32:54' prior: 50907586!
test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero
	
	| expectedSummary anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Balance = 0'.  
	
	anAccountSummaryGenerator := AccountSummaryReporter for: ReceptiveAccount new.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary .! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:32:55'!
FAILURE!

anAccountSummaryGenerator accountSummary!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/3/2021 00:44:38' prior: 50908424!
makeReport: anAccountReporter
	
	anAccountReporter reportReceptiveAccount: self
! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/3/2021 00:44:53'!
reportTransactions: anAccountReporter
	
	self transactions do: [ :aTransaction | aTransaction reportTransaction: anAccountReporter. ].
! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:46:14' prior: 50908814!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount reportTransactions: self.
	
	accountSummary add: 'Balance = ' , account balance asString .! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:47:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 00:47:41'!
FAILURE!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 00:47:41'!
FAILURE!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:47:41'!
FAILURE!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:47:41'!
FAILURE!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:47:41'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:47:41'!
ERROR!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:47:46'!
ERROR!
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:48:30'!
transferNet

	transferNetAccumulated := 0.

	account makeReport: self.
	
	^transferNetAccumulated! !
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:49:07'!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount reportTransactions: self! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:32' prior: 50907613!
test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Depósito por 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account .
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:35' prior: 50907661!
test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Extracción por 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:38' prior: 50907696!
test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:42' prior: 50907734!
test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance

	| expectedSummary account anAccountSummaryGenerator |
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100'. 
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	anAccountSummaryGenerator := AccountSummaryReporter for: account.
	
	self assert: expectedSummary = anAccountSummaryGenerator accountSummary.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:48' prior: 50907783!
test06TransferNetForEmptyAccountIsZero
	
	| expectedTransferNet aTransferNetGenerator |
	
	expectedTransferNet := 0.  
	
	aTransferNetGenerator := TransferNetReporter for: ReceptiveAccount new.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet .! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:53' prior: 50907817!
test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: ReceptiveAccount new to: account .
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:55' prior: 50907850!
test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := -100.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 100 from: account to: ReceptiveAccount new.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:49:59' prior: 50907883!
test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	
	aTransferNetGenerator := TransferNetReporter for: account.
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:50:01' prior: 50907920!
test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions
	
	| expectedTransferNet account aTransferNetGenerator |
	
	expectedTransferNet := 50.
	
	account := ReceptiveAccount new.
	
	AccountTransfer register: 50 from: account to: ReceptiveAccount new.
	AccountTransfer register: 100 from: ReceptiveAccount new to: account.
	Deposit register: 25 on: account .
	Withdraw register: 80 on: account .
	
	aTransferNetGenerator := TransferNetReporter for: account .
	
	self assert: expectedTransferNet = aTransferNetGenerator transferNet.! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:50:07' prior: 50908590!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50'
		with: 'Balance = 50'.
		
	expectedAccountSummary addAll: childSummary .
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	parentPortfolio add: childPortfolio .
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter accountSummary .! !
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:50:10' prior: 50908164!
test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions
	
	| expectedTransferNet aTransferNetReporter portfolio account |
	
	expectedTransferNet := 10.
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	Deposit register: 100 on: account .
	Withdraw register: 50 on: account .
	AccountTransfer register: 20 from: account to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: account .
	
	aTransferNetReporter := TransferNetReporter for: portfolio .
	
	self assert: expectedTransferNet = aTransferNetReporter transferNet.! !

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:50:11'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:50:11'!
FAILURE!

anAccountSummaryReporter accountSummary!
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 00:51:01' prior: 50908861!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount reportTransactions: self.
	
	accountSummary add: 'Balance = ' , aReceptiveAccount balance asString .! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 00:51:07'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:51:07'!
FAILURE!

 anAccountSummaryReporter accountSummary!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 00:52:47' prior: 50909092!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50.'
		with: 'Balance = 50'.
		
	expectedAccountSummary addAll: childSummary .
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	parentPortfolio add: childPortfolio .
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter accountSummary .! !

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 00:52:48'!
PASSED!
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 01:03:15'!
report: anAccount

	anAccount makeReport: self.
	
	accountSummary add: 'Balance = ' , anAccount balance asString .! !

!methodRemoval: AccountSummaryReporter #reportReceptiveAccount: stamp: 'GDH 6/3/2021 01:03:20'!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount reportTransactions: self.
	
	accountSummary add: 'Balance = ' , aReceptiveAccount balance asString .!

!methodRemoval: AccountSummaryReporter #report stamp: 'GDH 6/3/2021 01:03:24'!
report
	
	accountSummary := OrderedCollection new.

	account makeReport: self.
	
	accountSummary add: 'Balance = ' , account balance asString .
	
	^accountSummary !
!Portfolio methodsFor: 'report' stamp: 'GDH 6/3/2021 01:03:50' prior: 50908417!
makeReport: anAccountReporter 
	
	accounts do: [ :anAccount | anAccountReporter report: anAccount ].! !
!Portfolio methodsFor: 'report' stamp: 'GDH 6/3/2021 01:14:47' prior: 50909357!
makeReport: anAccountReporter

	
	
	accounts do: [ :anAccount | anAccountReporter report: anAccount ].! !
!AccountSummaryReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 01:15:11' prior: 50909335!
report: anAccount

	anAccount reportTransactions: self.
	
	accountSummary add: 'Balance = ' , anAccount balance asString .! !
!Portfolio methodsFor: 'report' stamp: 'GDH 6/3/2021 01:15:45'!
reportTransactions: anAccountReporter

	accounts do: [ :anAccount | anAccountReporter report: anAccount ].! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:15:52'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:15:52'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:15:52'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:15:52'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:15:52'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:15:52'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:15:52'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:15:56'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:16:06'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'GDH 6/3/2021 01:16:14' prior: 50908848!
makeReport: anAccountReporter
	
	anAccountReporter report: self
! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:16:17'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:16:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:16:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:16:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:16:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:16:23'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:16:23'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:16:23'!
ERROR!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:16:26'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:16:32'!
FAILURE!

anAccountSummaryReporter accountSummary!
!AccountReporterTest methodsFor: 'tests' stamp: 'GDH 6/3/2021 01:18:44' prior: 50909289!
test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance
	
	| expectedAccountSummary childSummary anAccountSummaryReporter parentPortfolio childPortfolio parentAccount childAccount |
	
	expectedAccountSummary := OrderedCollection 
		with: 'Depósito por 100.'
		with: 'Extracción por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'.
	
	childSummary := OrderedCollection
		with: 'Depósito por 50.'
		with: 'Balance = 50'.
		
	expectedAccountSummary addAll: childSummary .
	
	expectedAccountSummary add: 'Balance = 50'.
	expectedAccountSummary add: 'Balance = 110'.
		
	parentAccount := ReceptiveAccount new.
	childAccount := ReceptiveAccount new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: parentAccount.
	childPortfolio add: childAccount.
	parentPortfolio add: childPortfolio .
	
	Deposit register: 100 on: parentAccount .
	Withdraw register: 50 on: parentAccount .
	AccountTransfer register: 20 from: parentAccount to: ReceptiveAccount new.
	AccountTransfer register: 30 from: ReceptiveAccount new to: parentAccount .
	
	Deposit register: 50 on: childAccount .
	
	anAccountSummaryReporter := AccountSummaryReporter for: parentPortfolio .
	
	self assert: expectedAccountSummary = anAccountSummaryReporter accountSummary .! !

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:18:45'!
FAILURE!

anAccountSummaryReporter accountSummary!
!Portfolio methodsFor: 'report' stamp: 'GDH 6/3/2021 01:20:01' prior: 50909363!
makeReport: anAccountReporter

	anAccountReporter report: self.! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:20:12'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:20:12'!
ERROR!
!TransferNetReporter methodsFor: 'report' stamp: 'GDH 6/3/2021 01:22:11'!
report: anAccount

	anAccount reportTransactions: self! !

!methodRemoval: TransferNetReporter #report stamp: 'GDH 6/3/2021 01:22:14'!
report

	transferNetAccumulated := 0.

	account makeReport: self.
	
	^transferNetAccumulated!

!methodRemoval: TransferNetReporter #reportReceptiveAccount: stamp: 'GDH 6/3/2021 01:22:15'!
reportReceptiveAccount: aReceptiveAccount

	aReceptiveAccount reportTransactions: self!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:22:23'!
PASSED!
!Account methodsFor: 'report' stamp: 'GDH 6/3/2021 01:25:43'!
makeReport: anAccountReporter

	anAccountReporter report: self.! !

!methodRemoval: Portfolio #makeReport: stamp: 'GDH 6/3/2021 01:25:43'!
makeReport: anAccountReporter

	anAccountReporter report: self.!
!Account methodsFor: 'report' stamp: 'GDH 6/3/2021 01:26:05'!
reportTransactions: anAccountReporter

	self subclassResponsibility ! !
!Account methodsFor: 'report' stamp: 'GDH 6/3/2021 01:26:12' prior: 50909696!
makeReport: anAccountReporter

	self subclassResponsibility ! !
!Portfolio methodsFor: 'report' stamp: 'GDH 6/3/2021 01:26:17' overrides: 50909710!
makeReport: anAccountReporter

	anAccountReporter report: self.! !

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:26:24'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/3/2021 01:26:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/3/2021 01:26:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/3/2021 01:26:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/3/2021 01:26:31'!
PASSED!
!TransferReceiverLeg methodsFor: 'initialization' stamp: 'GDH 6/3/2021 01:27:02' overrides: 50907345!
initializeFor: aTransfer
	
	transfer := aTransfer .! !
!TransferSenderLeg methodsFor: 'initialization' stamp: 'GDH 6/3/2021 01:27:06' overrides: 50907345!
initializeFor: aTransfer
	
	transfer := aTransfer .! !

!methodRemoval: TransferReceiverLeg #initializeFor: stamp: 'GDH 6/3/2021 01:27:25'!
initializeFor: aTransfer
	
	transfer := aTransfer .!

!methodRemoval: TransferSenderLeg #initializeFor: stamp: 'GDH 6/3/2021 01:27:27'!
initializeFor: aTransfer
	
	transfer := aTransfer .!

!testRun: #AccountReporterTest #test01AccountSummaryForEmptyAccountShowsOnlyBalanceInZero stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAccountWithDepositShowsDepositTransactionAndBalance stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAccountWithWithdrawShowsWithdrawTransactionAndBalance stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAccountWithSendingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryForAccountWithReceivingTransferShowsReceivingTransferAndBalance stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test06TransferNetForEmptyAccountIsZero stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test07TransferNetForAccountWithOnlyRecevingTransfersShouldBeTransfersValues stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test08TransferNetForAccountWithOnlySendingTransfersShouldBeNegativeTransfersValues stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAccountWithSendingAndReceivingTransfersShouldBeNetValue stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetShouldNotTakeInAccountDepositAndWithdrawTransactions stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryForPortfolioShowsAllTransactionsAndBalance stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForPortfolioCalculatesNetValueOfTransferTransactions stamp: 'GDH 6/3/2021 01:27:31'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'GDH 6/3/2021 01:27:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferFromAccountAAddsToAccountB stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferKnowsBothLegs stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferLegsCanReachOppositeLegs stamp: 'GDH 6/3/2021 01:27:35'!
PASSED!

----QUIT----(3 June 2021 01:27:54) CuisUniversity-4532.image priorSource: 18267304!