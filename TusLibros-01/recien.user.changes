----STARTUP---- (9 June 2021 18:01:09) as C:\Applications\CuisUniversity\windows64\windows64\CuisUniversity-4532.image!


Object subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

!classDefinition: #ShoppingCartTest category: 'TusLibros.com' stamp: 'GDH 6/9/2021 18:35:07'!
Object subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

TestCase subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCartTest category: 'TusLibros' stamp: 'GDH 6/9/2021 18:36:45'!
TestCase subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCartTest methodsFor: 'no messages' stamp: 'GDH 6/9/2021 18:47:58'!
test01NewlyCreatedShoppingCartShouldBeEmpty
	
	! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 18:52:26'!
Object subclass: #ShoppingCart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 18:52:15' prior: 50914536!
test01NewlyCreatedShoppingCartShouldBeEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 19:11:05' prior: 50914548!
test01NewlyCreatedShoppingCartShouldBeEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self assert: shoppingCart isEmpty.
	! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 19:11:07'!
ERROR!
!ShoppingCart methodsFor: 'testing' stamp: 'GDH 6/9/2021 19:11:20'!
isEmpty
	self shouldBeImplemented.! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 19:48:31'!
ERROR!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 19:50:02'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'products'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'testing' stamp: 'GDH 6/9/2021 19:50:01' prior: 50914566!
isEmpty

	products isEmpty.! !
!ShoppingCart methodsFor: 'testing' stamp: 'GDH 6/9/2021 19:50:05' prior: 50914581!
isEmpty

	^products isEmpty.! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 19:50:08'!
ERROR!
!ShoppingCart methodsFor: 'nil' stamp: 'GDH 6/9/2021 19:51:45' overrides: 16896425!
initialize
	
	products := OrderedCollection new.! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 19:51:47'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:06:37'!
test02AddingProductToShoppingCartShouldMakeCartContainProduct
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	shoppingCart add: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.
	! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:11:01' prior: 50914601!
test02AddingProductToShoppingCartShouldMakeCartContainProduct
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	shoppingCart add: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:11:14'!
test02AddingProductToShoppingCartShouldMakeCartNotEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	shoppingCart add: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.! !

!methodRemoval: ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartContainProduct stamp: 'GDH 6/9/2021 20:11:14'!
test02AddingProductToShoppingCartShouldMakeCartContainProduct
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	shoppingCart add: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:11:43'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 20:11:52'!
add: aString 
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 20:12:47'!
addProduct: aString 
	self shouldBeImplemented.! !

!methodRemoval: ShoppingCart #add: stamp: 'GDH 6/9/2021 20:12:47'!
add: aString 
	self shouldBeImplemented.!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:12:59' prior: 50914619!
test02AddingProductToShoppingCartShouldMakeCartNotEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	shoppingCart addProduct: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.! !

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:13:07'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 20:13:35' prior: 50914646!
addProduct: aProductId 
	
	^products add: aProductId .! !

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:13:42'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 20:13:42'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:13:42'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:16:48'!
test03AddingProductWithEmptyIdShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: (shoppingCart addProduct: '')
		raise: Error
		withExceptionDo: [ :anError | anError messageText = ShoppingCart productIdCanNotBeEmptyErrorMessage ]! !

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:16:51'!
FAILURE!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 20:18:11' prior: 50914667!
addProduct: aProductId 
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	^products add: aProductId .! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 20:18:13'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:18:13'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:18:13'!
ERROR!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:18:13'!
ERROR!
!ShoppingCart class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 20:18:30'!
productIdCanNotBeEmptyErrorMessage
	self shouldBeImplemented.! !
!ShoppingCart class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 20:19:56' prior: 50914722!
productIdCanNotBeEmptyErrorMessage

	^'No se puede agregar un producto con id vac√≠o.'! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 20:19:59'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:19:59'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:19:59'!
ERROR!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:19:59'!
ERROR!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:20:11'!
ERROR!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:20:47'!
ERROR!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:23:23' prior: 50914683!
test03AddingProductWithEmptyIdShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: [ shoppingCart addProduct: '' ]
		raise: Error
		withExceptionDo: [ :anError | anError messageText = ShoppingCart productIdCanNotBeEmptyErrorMessage ]! !

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:23:25'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 20:23:25'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:23:25'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:23:25'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 20:26:50' prior: 50914756!
test03AddingProductWithEmptyIdShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: [ shoppingCart addProduct: '' ]
		raise: Error
		withMessageText: ShoppingCart productIdCanNotBeEmptyErrorMessage.! !

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:26:51'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 20:26:51'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 20:26:51'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 20:26:51'!
PASSED!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 21:25:15'!
assertProductIdIsNotEmpty: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 21:37:05'!
test04AddingProductWithEmptyIdShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: [ shoppingCart addProduct: '' ]
		raise: Error
		withMessageText: ShoppingCart productIdCanNotBeEmptyErrorMessage.! !

!methodRemoval: ShoppingCartTest #test04AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 21:37:11'!
test04AddingProductWithEmptyIdShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: [ shoppingCart addProduct: '' ]
		raise: Error
		withMessageText: ShoppingCart productIdCanNotBeEmptyErrorMessage.!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 21:52:27'!
test04ObtainingProductsShouldReturnAllAddedProducts
	
	| shoppingCart productsToAdd |
	
	shoppingCart := ShoppingCart new.
	
	productsToAdd := OrderedCollection with: 'ISBN-1' with: 'ISBN-1' with: 'ISBN-2'.
	
	self assert: (shoppingCart productsContained includesAllOf: productsToAdd) .! !

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:52:29'!
ERROR!
!ShoppingCart methodsFor: 'inspecting' stamp: 'GDH 6/9/2021 21:52:39'!
productsContained
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'inspecting' stamp: 'GDH 6/9/2021 21:56:07' prior: 50914852!
productsContained

	^products! !

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:56:10'!
FAILURE!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 21:57:02' prior: 50914836!
test04ObtainingProductsShouldReturnAllAddedProducts
	
	| shoppingCart productsToAdd |
	
	shoppingCart := ShoppingCart new.
	
	productsToAdd := OrderedCollection with: 'ISBN-1' with: 'ISBN-1' with: 'ISBN-2'.
	
	productsToAdd do: [ :aProductId | shoppingCart addProduct: aProductId ].
	
	self assert: (shoppingCart productsContained includesAllOf: productsToAdd) .! !

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:57:04'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 21:57:04'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 21:57:04'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 21:57:04'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:57:04'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:57:07'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 21:57:07'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 21:57:07'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 21:57:07'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 21:57:07'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:17:31'!
test05AddingNonExistingProductShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart new.
	
	self should: [ shoppingCart addProduct: 'INVALID-ISBN' ]
		raise: Error - MessageNotUnderstood 
		withMessageText: [ ShoppingCart triedToAddInvalidProductErrorMessage ]! !

!testRun: #ShoppingCartTest #test05AddingNonExistingProductShouldThrowAnError stamp: 'GDH 6/9/2021 22:17:44'!
FAILURE!
!ShoppingCart methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:18:15' prior: 50914699!
addProduct: aProductId 
	
	self assertProductIdIsNotEmpty: aProductId .
		
	^products add: aProductId .! !
!ShoppingCart methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:21:37' prior: 50914933!
addProduct: aProductId 
	
	self assertProductIdIsNotEmpty: aProductId .
	self assertProductIdIsValid: aProductId .
		
	^products add: aProductId .! !
!ShoppingCart methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:22:13' prior: 50914939!
addProduct: aProductId 
	
	self assertProductIdIsValid: aProductId .
			
	^products add: aProductId .! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:22:31'!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].! !

!methodRemoval: ShoppingCart #assertProductIdIsNotEmpty: stamp: 'GDH 6/9/2021 22:22:31'!
assertProductIdIsNotEmpty: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 22:23:15'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'products validProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:23:13' prior: 50914953!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	validProducts contains: aProductId .! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:23:26' prior: 50914975!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	validProducts includes: aProductId .! !
!ShoppingCart class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 22:24:25'!
for: aValidProductsCollection
	
	self new initializeFor: aValidProductsCollection .! !
!ShoppingCart methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:25:26'!
initializeFor: aValidProductsCollection
	
	products := OrderedCollection new.
	validProducts := aValidProductsCollection.! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:25:49' prior: 50914984!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	validProducts includes: aProductId .! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:27:09' prior: 50915005!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	(validProducts includes: aProductId) ifFalse: [ self error: ShoppingCart ].! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:27:24' prior: 50915014!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	(validProducts includes: aProductId) ifFalse: [ self error: ShoppingCart triedToAddInvalidProductErrorMessage ].! !
!ShoppingCart class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 22:28:09'!
triedToAddInvalidProductErrorMessage
	
	^'No se puede agregar un producto que no pertence a la empresa'! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:29:10' prior: 50914917!
test05AddingNonExistingProductShouldThrowAnError
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart for: (OrderedCollection with: 'VALID-ISBN1').
	
	self should: [ shoppingCart addProduct: 'INVALID-ISBN' ]
		raise: Error - MessageNotUnderstood 
		withMessageText: [ ShoppingCart triedToAddInvalidProductErrorMessage ]! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:29:37' prior: 50914865!
test04ObtainingProductsShouldReturnAllAddedProducts
	
	| shoppingCart productsToAdd |
	
	shoppingCart := ShoppingCart for: (OrderedCollection with: 'ISBN-1' with: 'ISBN-2').
	
	productsToAdd := OrderedCollection with: 'ISBN-1' with: 'ISBN-1' with: 'ISBN-2'.
	
	productsToAdd do: [ :aProductId | shoppingCart addProduct: aProductId ].
	
	self assert: (shoppingCart productsContained includesAllOf: productsToAdd) .! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:29:57' prior: 50914654!
test02AddingProductToShoppingCartShouldMakeCartNotEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart .
	
	shoppingCart addProduct: 'ISBN-Falso'.
	
	self deny: shoppingCart isEmpty.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:30:16' prior: 50915071!
test02AddingProductToShoppingCartShouldMakeCartNotEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart for: (OrderedCollection with: 'ISBN-1').
	
	shoppingCart addProduct: 'ISBN-1'.
	
	self deny: shoppingCart isEmpty.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:30:48' prior: 50914555!
test01NewlyCreatedShoppingCartShouldBeEmpty
	
	| shoppingCart |
	
	shoppingCart := ShoppingCart for: (OrderedCollection with: 'ISBN-1').
	
	self assert: shoppingCart isEmpty.
	! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 22:30:49'!
ERROR!

!methodRemoval: ShoppingCart #initialize stamp: 'GDH 6/9/2021 22:31:13'!
initialize
	
	products := OrderedCollection new.!
!ShoppingCart class methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:31:19' prior: 50914992!
for: aValidProductsCollection
	
	^self new initializeFor: aValidProductsCollection .! !

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 22:31:22'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 22:31:22'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 22:31:22'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 22:31:22'!
PASSED!

!testRun: #ShoppingCartTest #test05AddingNonExistingProductShouldThrowAnError stamp: 'GDH 6/9/2021 22:31:22'!
PASSED!

Object subclass: #ProductsCatalog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ProductsCatalog category: 'TusLibros' stamp: 'GDH 6/9/2021 22:31:44'!
Object subclass: #ProductsCatalog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ProductsCatalog class methodsFor: 'no messages' stamp: 'GDH 6/9/2021 22:32:11'!
for: aValidProductsCollection
	
	^self new initializeFor: aValidProductsCollection .! !

!classDefinition: #ProductsCatalog category: 'TusLibros' stamp: 'GDH 6/9/2021 22:33:02'!
Object subclass: #ProductsCatalog
	instanceVariableNames: 'validProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ProductsCatalog methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:33:01'!
initiliazeFor: aValidProductsCollection
	
	validProducts := aValidProductsCollection .! !
!ProductsCatalog methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:33:18' overrides: 16896425!
initialize
	
	validProducts := OrderedCollection new.! !
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:34:14' prior: 50915024!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].! !
!ProductsCatalog methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:35:54'!
assertProductIsValid: aProductId
	
	^(validProducts includes: aProductId) ifFalse: [ self error: ProductsCatalog triedToAddInvalidProductErrorMessage ].! !
!ProductsCatalog methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:36:22' prior: 50915174!
assertProductIsValid: aProductId
	
	^(validProducts includes: aProductId) ifFalse: [ self error: ProductsCatalog productIsNotInCatalogErrorMessage ].! !
!ProductsCatalog class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 22:36:49'!
productIsNotInCatalogErrorMessage
	
	! !

!methodRemoval: ShoppingCart class #triedToAddInvalidProductErrorMessage stamp: 'GDH 6/9/2021 22:37:04'!
triedToAddInvalidProductErrorMessage
	
	^'No se puede agregar un producto que no pertence a la empresa'!
!ProductsCatalog class methodsFor: 'error messages' stamp: 'GDH 6/9/2021 22:37:13' prior: 50915190!
productIsNotInCatalogErrorMessage
	
	^'No se puede agregar un producto que no pertence a la empresa'! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 22:38:13'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'products validProducts productsCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'assertions' stamp: 'GDH 6/9/2021 22:38:12' prior: 50915167!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	productsCatalog assertProductIsValid: aProductId .! !
!ShoppingCart methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:38:42' prior: 50914998!
initializeFor: aProductsCatalog
	
	products := OrderedCollection new.
	productsCatalog := aProductsCatalog! !
!ShoppingCart methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:38:45' prior: 50915224!
initializeFor: aProductsCatalog
	
	products := OrderedCollection new.
	productsCatalog := aProductsCatalog.! !
!ShoppingCart class methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:39:10' prior: 50915107!
for: aProductsCatalog
	
	^self new initializeFor: aProductsCatalog .! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:40:03' prior: 50915090!
test01NewlyCreatedShoppingCartShouldBeEmpty
	
	| shoppingCart productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'ISBN-1').
	
	shoppingCart := ShoppingCart for: productsCatalog .
	
	self assert: shoppingCart isEmpty.
	! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:40:29' prior: 50915080!
test02AddingProductToShoppingCartShouldMakeCartNotEmpty
	
	| shoppingCart productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'ISBN-1').
	
	shoppingCart := ShoppingCart for: productsCatalog .
	
	shoppingCart addProduct: 'ISBN-1'.
	
	self deny: shoppingCart isEmpty.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:40:59' prior: 50915055!
test04ObtainingProductsShouldReturnAllAddedProducts
	
	| shoppingCart productsToAdd productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'ISBN-1' with: 'ISBN-2').
	
	shoppingCart := ShoppingCart for: productsCatalog .
		
	productsToAdd := OrderedCollection with: 'ISBN-1' with: 'ISBN-1' with: 'ISBN-2'.
	
	productsToAdd do: [ :aProductId | shoppingCart addProduct: aProductId ].
	
	self assert: (shoppingCart productsContained includesAllOf: productsToAdd) .! !

!testRun: #ShoppingCartTest #test05AddingNonExistingProductShouldThrowAnError stamp: 'GDH 6/9/2021 22:41:02'!
ERROR!

!testRun: #ShoppingCartTest #test05AddingNonExistingProductShouldThrowAnError stamp: 'GDH 6/9/2021 22:41:15'!
ERROR!
!ShoppingCartTest methodsFor: 'tests' stamp: 'GDH 6/9/2021 22:43:02' prior: 50915042!
test05AddingNonExistingProductShouldThrowAnError
	
	| shoppingCart productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'VALID-ISBN1').
	
	shoppingCart := ShoppingCart for: productsCatalog .
	
	self should: [ shoppingCart addProduct: 'INVALID-ISBN' ]
		raise: Error - MessageNotUnderstood 
		withMessageText: [ ShoppingCart triedToAddInvalidProductErrorMessage ]! !

!methodRemoval: ShoppingCartTest #test05AddingNonExistingProductShouldThrowAnError stamp: 'GDH 6/9/2021 22:43:17'!
test05AddingNonExistingProductShouldThrowAnError
	
	| shoppingCart productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'VALID-ISBN1').
	
	shoppingCart := ShoppingCart for: productsCatalog .
	
	self should: [ shoppingCart addProduct: 'INVALID-ISBN' ]
		raise: Error - MessageNotUnderstood 
		withMessageText: [ ShoppingCart triedToAddInvalidProductErrorMessage ]!

TestCase subclass: #ProductsCatalogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ProductsCatalogTest category: 'TusLibros' stamp: 'GDH 6/9/2021 22:43:26'!
TestCase subclass: #ProductsCatalogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ProductsCatalogTest methodsFor: 'no messages' stamp: 'GDH 6/9/2021 22:45:10'!
test01WhenAssertingInvalidProductShouldRaiseAnError
	
	| productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'VALID-ISBN').
		
	self should: [ productsCatalog assertProductIsValid: 'INVALID-ISBN' ]
		raise: Error - MessageNotUnderstood 
		withMessageText: [ ProductsCatalog productIsNotInCatalogErrorMessage ]! !

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:45:14'!
ERROR!

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:45:33'!
ERROR!

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:45:41'!
ERROR!

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:45:59'!
ERROR!
!ProductsCatalog methodsFor: 'initialization' stamp: 'GDH 6/9/2021 22:46:21'!
initializeFor: aValidProductsCollection
	
	validProducts := aValidProductsCollection .! !

!methodRemoval: ProductsCatalog #initiliazeFor: stamp: 'GDH 6/9/2021 22:46:26'!
initiliazeFor: aValidProductsCollection
	
	validProducts := aValidProductsCollection .!

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:46:28'!
PASSED!
!ProductsCatalogTest methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 22:48:36'!
test02AddingProductToCatalogShouldMakeItValid
	
	| productsCatalog |
	
	productsCatalog := ProductsCatalog for: (OrderedCollection with: 'VALID-ISBN').
	productsCatalog addProduct: 'VALID-ISBN-2'.
	
	productsCatalog assertProductIsValid: 'VALID-ISBN-2'.! !

!testRun: #ProductsCatalogTest #test02AddingProductToCatalogShouldMakeItValid stamp: 'GDH 6/9/2021 22:48:38'!
ERROR!
!ProductsCatalog methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:48:54'!
addProduct: aString 
	self shouldBeImplemented.! !
!ProductsCatalog methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:49:08' prior: 50915394!
addProduct: aProduct
	 
	.! !
!ProductsCatalog methodsFor: 'adding' stamp: 'GDH 6/9/2021 22:49:20' prior: 50915399!
addProduct: aProduct
	 
	validProducts add: aProduct .! !

!testRun: #ProductsCatalogTest #test02AddingProductToCatalogShouldMakeItValid stamp: 'GDH 6/9/2021 22:49:23'!
PASSED!

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:49:23'!
PASSED!

!testRun: #ProductsCatalogTest #test02AddingProductToCatalogShouldMakeItValid stamp: 'GDH 6/9/2021 22:49:23'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 22:49:25'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 22:49:25'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 22:49:25'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 22:49:25'!
PASSED!

Object subclass: #ShoppingCart
	instanceVariableNames: 'products productsCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 22:49:51'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'products productsCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'GDH 6/9/2021 22:49:57'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'products catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 22:49:57' prior: 50915215!
assertProductIdIsValid: aProductId
	
	(aProductId isEmpty) ifTrue: [ self error: ShoppingCart productIdCanNotBeEmptyErrorMessage ].
	
	catalog assertProductIsValid: aProductId .! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'GDH 6/9/2021 22:49:57' prior: 50915231!
initializeFor: aProductsCatalog
	
	products := OrderedCollection new.
	catalog := aProductsCatalog.! !

!testRun: #ProductsCatalogTest #test01WhenAssertingInvalidProductShouldRaiseAnError stamp: 'GDH 6/9/2021 22:50:12'!
PASSED!

!testRun: #ProductsCatalogTest #test02AddingProductToCatalogShouldMakeItValid stamp: 'GDH 6/9/2021 22:50:12'!
PASSED!

!testRun: #ShoppingCartTest #test01NewlyCreatedShoppingCartShouldBeEmpty stamp: 'GDH 6/9/2021 22:50:13'!
PASSED!

!testRun: #ShoppingCartTest #test02AddingProductToShoppingCartShouldMakeCartNotEmpty stamp: 'GDH 6/9/2021 22:50:13'!
PASSED!

!testRun: #ShoppingCartTest #test03AddingProductWithEmptyIdShouldThrowAnError stamp: 'GDH 6/9/2021 22:50:13'!
PASSED!

!testRun: #ShoppingCartTest #test04ObtainingProductsShouldReturnAllAddedProducts stamp: 'GDH 6/9/2021 22:50:13'!
PASSED!